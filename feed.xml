<?xml version="1.0" encoding="UTF-8"?>  
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">  
    <channel>  
        <title></title>  
        <description>王俊博客，软件改变世界！王俊博客是作者个人知识库、是记录历程回顾的笔记本、是经验教训的资源池， 旨在促进软件开发领域知识与创新的传播，为软件开发中提供帮助。更多是作者本人的经验积累。
</description>  
        <link>http://localhost:4000</link>  
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />  
          
            <item>  
               <title>在Centos7下的nginx编译安装</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#在centos7下的nginx编译安装&quot; id=&quot;markdown-toc-在centos7下的nginx编译安装&quot;&gt;在Centos7下的nginx编译安装&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-安装依赖&quot; id=&quot;markdown-toc-1-安装依赖&quot;&gt;1. 安装依赖&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-创建用户和组&quot; id=&quot;markdown-toc-2-创建用户和组&quot;&gt;2. 创建用户和组&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-下载安装包&quot; id=&quot;markdown-toc-3-下载安装包&quot;&gt;3. 下载安装包&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-编译配置与安装&quot; id=&quot;markdown-toc-4-编译配置与安装&quot;&gt;4. 编译配置与安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-安装路径&quot; id=&quot;markdown-toc-5-安装路径&quot;&gt;5. 安装路径&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;在centos7下的nginx编译安装&quot;&gt;在Centos7下的nginx编译安装&lt;/h1&gt;

&lt;h2 id=&quot;1-安装依赖&quot;&gt;1. 安装依赖&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum -y install gcc gcc-c++ autoconf automake
yum -y install zlib zlib-devel openssl openssl-devel pcre-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2-创建用户和组&quot;&gt;2. 创建用户和组&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;groupadd -r nginx
useradd -s /sbin/nologin -g nginx -r nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-下载安装包&quot;&gt;3. 下载安装包&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://nginx.org/download/nginx-1.10.2.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-编译配置与安装&quot;&gt;4. 编译配置与安装&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 解压缩&lt;/span&gt;
tar -zxvf nginx-1.10.2.tar.gz

&lt;span class=&quot;c&quot;&gt;# 进入压缩目录&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;nginx-1.10.2

&lt;span class=&quot;c&quot;&gt;# 进行模块配置&lt;/span&gt;
./configure &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --sbin-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/sbin/nginx &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --conf-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/nginx/nginx.conf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --error-log-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/log/nginx/error.log &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --http-log-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/log/nginx/access.log &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --pid-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run/nginx/nginx.pid  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --lock-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/lock/nginx.lock &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --group&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --with-http_ssl_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --with-http_flv_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --with-http_stub_status_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --with-http_gzip_static_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --http-client-body-temp-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/tmp/nginx/client/ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --http-proxy-temp-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/tmp/nginx/proxy/ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --http-fastcgi-temp-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/tmp/nginx/fcgi/ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --http-uwsgi-temp-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/tmp/nginx/uwsgi &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --http-scgi-temp-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/tmp/nginx/scgi &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --with-pcre

&lt;span class=&quot;c&quot;&gt;# 编译安装&lt;/span&gt;
make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;5-安装路径&quot;&gt;5. 安装路径&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;路径&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;日志目录&lt;/td&gt;
      &lt;td&gt;/var/log/nginx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;配置目录&lt;/td&gt;
      &lt;td&gt;/etc/nginx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PID文件&lt;/td&gt;
      &lt;td&gt;/var/run/nginx/nginx.pid&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;启动文件&lt;/td&gt;
      &lt;td&gt;/usr/sbin/nginx&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>  
               <pubDate>Mon, 26 Dec 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/12/nginx-compile-install/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/12/nginx-compile-install/</guid>  
               </item>  
          
            <item>  
               <title>ActiveMQ + Zookeeper 集群模式的配置整理</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#activemq--zookeeper-集群模式的配置整理&quot; id=&quot;markdown-toc-activemq--zookeeper-集群模式的配置整理&quot;&gt;ActiveMQ + Zookeeper 集群模式的配置整理&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-介绍&quot; id=&quot;markdown-toc-1-介绍&quot;&gt;1. 介绍&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-文件准备&quot; id=&quot;markdown-toc-2-文件准备&quot;&gt;2. 文件准备&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-环境准备&quot; id=&quot;markdown-toc-3-环境准备&quot;&gt;3. 环境准备&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-开始安装&quot; id=&quot;markdown-toc-4-开始安装&quot;&gt;4. 开始安装&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#41-配置jdk环境&quot; id=&quot;markdown-toc-41-配置jdk环境&quot;&gt;4.1 配置JDK环境&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#42-配置zookeeper集群&quot; id=&quot;markdown-toc-42-配置zookeeper集群&quot;&gt;4.2 配置Zookeeper集群&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#43-配置activemq集群&quot; id=&quot;markdown-toc-43-配置activemq集群&quot;&gt;4.3 配置ActiveMQ集群&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#44-activemq集群下的客户端连接方式&quot; id=&quot;markdown-toc-44-activemq集群下的客户端连接方式&quot;&gt;4.4 ActiveMQ集群下的客户端连接方式&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-broker-cluster模式&quot; id=&quot;markdown-toc-5-broker-cluster模式&quot;&gt;5. Broker Cluster模式&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#51-broker-cluster原理&quot; id=&quot;markdown-toc-51-broker-cluster原理&quot;&gt;5.1 broker-cluster原理&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#52-部署方式&quot; id=&quot;markdown-toc-52-部署方式&quot;&gt;5.2 部署方式&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;activemq--zookeeper-集群模式的配置整理&quot;&gt;ActiveMQ + Zookeeper 集群模式的配置整理&lt;/h1&gt;

&lt;h2 id=&quot;1-介绍&quot;&gt;1. 介绍&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://activemq.apache.org/&quot;&gt;ActiveMQ&lt;/a&gt;&lt;/strong&gt;自5.9.0版本后集群的实现方式取消了传统的 &lt;strong&gt;master-slave&lt;/strong&gt; 模式，取而代之的结合当下流行的&lt;strong&gt;&lt;a href=&quot;http://zookeeper.apache.org/&quot;&gt;ZooKeeper&lt;/a&gt;&lt;/strong&gt;作为裁判的选举方式。&lt;strong&gt;共享目录&lt;/strong&gt;和&lt;strong&gt;数据库共享&lt;/strong&gt;依然存在。&lt;/p&gt;

&lt;p&gt;本篇文章将阐述基于&lt;strong&gt;zookeeper + leveldb&lt;/strong&gt;搭建的activemq集群。&lt;/p&gt;

&lt;h2 id=&quot;2-文件准备&quot;&gt;2. 文件准备&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ActiveMQ 5.9.0 安装包，&lt;a href=&quot;http://archive.apache.org/dist/activemq/apache-activemq/5.9.0/apache-activemq-5.9.0-bin.tar.gz&quot;&gt;下载&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jdk1.8 安装包，&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&quot;&gt;下载&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Zookeeper 3.4.6 安装包&lt;a href=&quot;http://www.apache.org/dyn/closer.cgi/zookeeper/&quot;&gt;下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-环境准备&quot;&gt;3. 环境准备&lt;/h2&gt;

&lt;p&gt;服务器环境最少准备3台，本文中服务器系统为&lt;strong&gt;Centos7&lt;/strong&gt;。下面是服务器地址：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;10.10.201.110  - &lt;strong&gt;Master&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;10.10.201.111  - &lt;strong&gt;Slaver&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;10.10.201.112  - &lt;strong&gt;Slaver&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-开始安装&quot;&gt;4. 开始安装&lt;/h2&gt;

&lt;p&gt;首先把三个安装包（apache-activemq-5.9.0-bin.zip、jdk1.8.0_65.tar.gz、zookeeper-3.4.6.zip）分别上传到每个服务器中.&lt;/p&gt;

&lt;h3 id=&quot;41-配置jdk环境&quot;&gt;4.1 配置JDK环境&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ActiveMQ&lt;/strong&gt; 和 &lt;strong&gt;Zookeeper&lt;/strong&gt; 的启动都需要java环境，所以首先需要配置好JAVA_HOME。&lt;/p&gt;

&lt;p&gt;解压缩已经上传的&lt;code class=&quot;highlighter-rouge&quot;&gt;jdk1.8.0_65.tar.gz&lt;/code&gt;压缩包&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -zxvf jdk1.8.0_65.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt;文件，在文件结尾处添加 &lt;strong&gt;JAVA_HOME&lt;/strong&gt; 环境变量并指定地址&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export JAVA_HOME=/data/jdk1.8.0_65
export PATH=$JAVA_HOME/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用 &lt;strong&gt;source&lt;/strong&gt; 命令使&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt;文件配置立即生效&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /etc/profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用 &lt;strong&gt;java -version&lt;/strong&gt; 命令查看JDK是否配置成功&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -version

java version &lt;span class=&quot;s2&quot;&gt;&quot;1.8.0_20&quot;&lt;/span&gt;
Java&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; SE Runtime Environment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 1.8.0_20-b26&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Java HotSpot&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 64-Bit Server VM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 25.20-b23, mixed mode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;出现上述信息则表示&lt;strong&gt;JDK&lt;/strong&gt;配置已经成功，反之亦然。&lt;/p&gt;

&lt;h3 id=&quot;42-配置zookeeper集群&quot;&gt;4.2 配置Zookeeper集群&lt;/h3&gt;

&lt;p&gt;加压缩&lt;code class=&quot;highlighter-rouge&quot;&gt;zookeeper-3.4.6.zip&lt;/code&gt;安装包&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unzip zookeeper-3.4.6.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编辑Zookeeper配置文件目录中的&lt;code class=&quot;highlighter-rouge&quot;&gt;conf/zoo.cfg&lt;/code&gt;文件（没有就复制&lt;code class=&quot;highlighter-rouge&quot;&gt;zoo_sample.cfg&lt;/code&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;zoo.cfg&lt;/code&gt;），添加如下内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tickTime=2000
initLimit=10
syncLimit=5
dataDir=/var/lib/zookeeper
clientPort=2181
server.1=10.10.201.110:2888:3888
server.2=10.10.201.111:2888:3888
server.3=10.10.201.112:2888:3888
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;将zoo.cfg文件分别拷贝到其余2个服务器中，保持3台服务器的zoo.cfg是同样的上述配置信息。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;分别在各个服务器中创建&lt;strong&gt;myid&lt;/strong&gt;文件，这里注意各个IP对应的序号&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 10.10.201.110&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;1 &amp;gt; /var/lib/zookeeper/myid

&lt;span class=&quot;c&quot;&gt;# 10.10.201.111&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;2 &amp;gt; /var/lib/zookeeper/myid

&lt;span class=&quot;c&quot;&gt;# 10.10.201.112&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;3 &amp;gt; /var/lib/zookeeper/myid
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;若创建myid文件失败，应该先创建&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/zookeeper&lt;/code&gt;的目录，然后在执行上述命令，上面的命令是各自服务器执行各自的即可。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;进入&lt;strong&gt;zookeeper&lt;/strong&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/&lt;/code&gt;目录，执行启动命令并观察日志（3台同理）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./zkServer.sh start

&lt;span class=&quot;c&quot;&gt;# 查看日志&lt;/span&gt;
tail -f zookeeper.out
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;验证&lt;strong&gt;zookeeper&lt;/strong&gt;的集群，在其中一台服务器中创建一条节点的数据，看看其他服务器是否能查看到同步的节点信息&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 连接进入zookeeper&lt;/span&gt;
./zkCli.sh

&lt;span class=&quot;c&quot;&gt;# 创建节点数据&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;create /vinny &lt;span class=&quot;s2&quot;&gt;&quot;HelloWorld&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 在其他服务器节点中查看&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;get /vinny
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;若能在其他服务器的Zookeeper环境中查看到已创建的节点信息，则表示Zookeeper的集群搭建完成。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;43-配置activemq集群&quot;&gt;4.3 配置ActiveMQ集群&lt;/h3&gt;

&lt;p&gt;介绍中也提到，在&lt;strong&gt;ActiveMQ&lt;/strong&gt;新版中将结合&lt;strong&gt;Zookeeper&lt;/strong&gt;进行集群的搭建，所以上面的操作只是为&lt;strong&gt;ActiveMQ&lt;/strong&gt;集群在做准备。&lt;/p&gt;

&lt;p&gt;解压缩&lt;code class=&quot;highlighter-rouge&quot;&gt;apache-activemq-5.9.0-bin.zip&lt;/code&gt;安装包&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unzip apache-activemq-5.9.0-bin.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编辑&lt;strong&gt;ActiveMQ&lt;/strong&gt;配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;conf/activemq.xml&lt;/code&gt;，查找到&lt;code class=&quot;highlighter-rouge&quot;&gt;persistenceAdapter&lt;/code&gt;节点，将原有的&lt;strong&gt;kahaDB&lt;/strong&gt;存储方式注释，添加&lt;strong&gt;Zookeeper&lt;/strong&gt;的持久化方式，如下：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;persistenceAdapter&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&amp;lt;kahaDB directory=&quot;${activemq.data}/kahadb&quot;/&amp;gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;replicatedLevelDB&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;directory=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;activemq-data&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;replicas=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;bind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tcp://0.0.0.0:0&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;zkAddress=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10.10.201.110:2181,10.10.201.111:2181,10.10.201.112:2181&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;hostname=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NGMQT01&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;zkPath=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/activemq/leveldb-stores&quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/persistenceAdapter&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;从上述配置文件的内容中看出，每个&lt;strong&gt;ActiveMQ&lt;/strong&gt;配置都指定了&lt;strong&gt;Zookeeper&lt;/strong&gt;的连接信息，并使用&lt;code class=&quot;highlighter-rouge&quot;&gt;zkPath&lt;/code&gt;属性指明存储的节点名称，各个&lt;strong&gt;ActiveMQ&lt;/strong&gt;抢占式的获取&lt;code class=&quot;highlighter-rouge&quot;&gt;/activemq/leveldb-stores&lt;/code&gt;节点，谁抢到谁就是master。&lt;/p&gt;

&lt;p&gt;分别启动&lt;strong&gt;ActiveMQ&lt;/strong&gt;并观察日志输出（上述的配置内容其余2台都需要有同样的配置）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 启动activemq&lt;/span&gt;
./activemq start

&lt;span class=&quot;c&quot;&gt;# 观察日志输出&lt;/span&gt;
tail -f ../data/activemq.log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;进入&lt;strong&gt;Zookeeper&lt;/strong&gt;环境中查看节点&lt;code class=&quot;highlighter-rouge&quot;&gt;/activemq/leveldb-stores&lt;/code&gt;是否已经创建。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当3台服务器中的&lt;strong&gt;ActiveMQ&lt;/strong&gt;启动完成后，且输出的日志没有任何错误时，集群搭建完成。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里需要注意的是集群环境中的ActiveMQ，只会有一台提供服务，8161的控制界面也只会提供一个。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;44-activemq集群下的客户端连接方式&quot;&gt;4.4 ActiveMQ集群下的客户端连接方式&lt;/h3&gt;

&lt;p&gt;客户端使用&lt;strong&gt;failover&lt;/strong&gt;协议，当任何一台JMS的broker当机后，ActiveMQ能自动连接上一个可用的broker。同时会自动恢复&lt;strong&gt;destinations&lt;/strong&gt;, &lt;strong&gt;sessions&lt;/strong&gt;, &lt;strong&gt;producers&lt;/strong&gt;和&lt;strong&gt;consumers&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;failover协议格式&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;failover:(tcp://10.10.201.110:61616,tcp://10.10.201.111:61616,tcp://10.10.201.112:61616)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;传输URI选项&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;failover协议下有很多选项可供配置，如 &lt;strong&gt;randomize&lt;/strong&gt; 选项：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;failover:(tcp://10.10.201.110:61616,tcp://10.10.201.111:61616)?randomize=false
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;更多的URI配置选项，请参看 &lt;a href=&quot;http://activemq.apache.org/failover-transport-reference.html&quot;&gt;failover-transport-reference&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;5-broker-cluster模式&quot;&gt;5. Broker Cluster模式&lt;/h2&gt;

&lt;p&gt;上面第4章节说明了ActiveMQ的&lt;strong&gt;Master-slave&lt;/strong&gt;模式，这个模式中只是避免了单点故障，服务于客户端请求的仍然只会有一台ActiveMQ的服务器。当遇到大数据量、高并发的情况下，一台ActiveMQ的服务器并不能满足需求。此时需要做负载，使并发请求均衡的分发到不同的ActiveMQ服务器中。&lt;/p&gt;

&lt;p&gt;所以一个可靠的ActiveMQ消息模型是：&lt;strong&gt;Master Slave + Broker Cluster&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;51-broker-cluster原理&quot;&gt;5.1 broker-cluster原理&lt;/h3&gt;

&lt;p&gt;在&lt;strong&gt;broker-cluster&lt;/strong&gt;模式中，每个broker通过网络互相连接，共享Queue和Topic。当&lt;strong&gt;broker-A&lt;/strong&gt;中的 &lt;em&gt;Queue-1&lt;/em&gt; 收到消息时，所有&lt;strong&gt;Consumer&lt;/strong&gt;由于还没有处理完上一次的消息，所以此时这条消息处于&lt;strong&gt;pending&lt;/strong&gt;（待处理）状态。若此时在broker-B中有&lt;strong&gt;Consumer&lt;/strong&gt;在等待消费 &lt;em&gt;Queue-1&lt;/em&gt; 消息时，那么broker-B会通过网络获取到broker-A中的这条消息并通知自己等待的&lt;strong&gt;Consumer&lt;/strong&gt;来消费。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里的每个broker可以理解为第4章节的Master-Slave，也就是说一个broker就是三台ActiveMQ组成的Master-Slave模式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;52-部署方式&quot;&gt;5.2 部署方式&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;broker-cluster&lt;/strong&gt;有两种实现方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Static Broker Cluster&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Broker Cluster&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Static Broker Cluster配置&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;networkConnectors&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;networkConnector&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;static:(tcp://0.0.0.0:61617)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;duplex=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/networkConnectors&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Broker Cluster&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;networkConnectors&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;networkConnector&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;multicast://default&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;dynamicOnly=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;networkTTL=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;prefetchSize=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;decreaseNetworkConsumerPriority=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/networkConnectors&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Sun, 25 Dec 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/12/activemq-zookeeper-cluster/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/12/activemq-zookeeper-cluster/</guid>  
               </item>  
          
            <item>  
               <title>高可用的mongodb:分片存储sharding配置</title>  
               <description></description>  
               <pubDate>Sat, 10 Dec 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/12/mongodb-replica-shard/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/12/mongodb-replica-shard/</guid>  
               </item>  
          
            <item>  
               <title>高可用的mongodb:副本集replica set配置</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-介绍&quot; id=&quot;markdown-toc-1-介绍&quot;&gt;1. 介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-准备&quot; id=&quot;markdown-toc-2-准备&quot;&gt;2. 准备&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-配置&quot; id=&quot;markdown-toc-3-配置&quot;&gt;3. 配置&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-创建数据目录&quot; id=&quot;markdown-toc-31-创建数据目录&quot;&gt;3.1 创建数据目录&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-创建配置文件&quot; id=&quot;markdown-toc-32-创建配置文件&quot;&gt;3.2 创建配置文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-启动mongodb&quot; id=&quot;markdown-toc-33-启动mongodb&quot;&gt;3.3 启动mongodb&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-配置主备仲裁节点&quot; id=&quot;markdown-toc-34-配置主备仲裁节点&quot;&gt;3.4 配置主备仲裁节点&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-总结&quot; id=&quot;markdown-toc-4-总结&quot;&gt;4. 总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-介绍&quot;&gt;1. 介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wangjun.bid/2016/12/mongodb-master-slave/&quot;&gt;上一篇文章&lt;/a&gt;介绍了 &lt;strong&gt;mongodb&lt;/strong&gt; 的master-slave模式及其配置方式，但 &lt;strong&gt;mongodb&lt;/strong&gt; 官方已经不建议使用此模式，替代方案采用的是副本集（&lt;strong&gt;Replica Set&lt;/strong&gt;）模式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;master-slave&lt;/strong&gt;模式其实是单副本配置，没有很好的扩展性和容错性。而 &lt;strong&gt;Replica Set&lt;/strong&gt; 具有多个副本保证了应用的高可用，即使一个副本挂掉还是有其他副本可以继续服务。副本集中的各个副本相互间通过心跳检测，当检测到主服务器中断后，会在内部自行进行选举一台新的主服务器。&lt;/p&gt;

&lt;h2 id=&quot;2-准备&quot;&gt;2. 准备&lt;/h2&gt;

&lt;p&gt;三台服务器，分别用做主节点、备节点和仲裁节点，如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;192.168.1.101 (主节点)&lt;/li&gt;
  &lt;li&gt;192.168.1.102 (备节点)&lt;/li&gt;
  &lt;li&gt;192.168.1.103 (仲裁节点)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主备节点用于数据存储，仲裁节点不存储数据，只用做选举。&lt;/p&gt;

&lt;h2 id=&quot;3-配置&quot;&gt;3. 配置&lt;/h2&gt;

&lt;h3 id=&quot;31-创建数据目录&quot;&gt;3.1 创建数据目录&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;mongodb&lt;/strong&gt; 的数据存储通常会存在指定的数据盘符中，这也这意味着并不会直接把数据目录放在 &lt;strong&gt;mongodb&lt;/strong&gt; 的 &lt;strong&gt;data&lt;/strong&gt; 目录里，所以这里专门创建数据存储目录。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 192.168.1.101主节点数据目录&lt;/span&gt;
mkdir -p /data/mongodb/master

&lt;span class=&quot;c&quot;&gt;# 192.168.1.102备节点数据目录&lt;/span&gt;
mkdir -p /data/mongodb/slave

&lt;span class=&quot;c&quot;&gt;# 192.168.1.103仲裁节点数据目录&lt;/span&gt;
mkdir -p /data/mongodb/arbiter
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;32-创建配置文件&quot;&gt;3.2 创建配置文件&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# master.conf 主节点配置文件
dbpath=/data/mongodb/master
logpath=/root/mongodb-linux-x86_64-2.4.9/log/master.log
pidfilepath=/root/mongodb-linux-x86_64-2.4.9/log/master.pid
directoryperdb=true
logappend=true
replSet=bid
bind_ip=192.168.1.101
port=27017
oplogSize=10000
fork=true
noprealloc=tru
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# slave.conf 备节点配置文件
dbpath=/data/mongodb/slave
logpath=/root/mongodb-linux-x86_64-2.4.9/log/master.log
pidfilepath=/root/mongodb-linux-x86_64-2.4.9/log/master.pid
directoryperdb=true
logappend=true
replSet=bid
bind_ip=192.168.1.102
port=27017
oplogSize=10000
fork=true
noprealloc=tru
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# arbiter.conf 仲裁节点配置文件
dbpath=/data/mongodb/arbiter
logpath=/root/mongodb-linux-x86_64-2.4.9/log/master.log
pidfilepath=/root/mongodb-linux-x86_64-2.4.9/log/master.pid
directoryperdb=true
logappend=true
replSet=bid
bind_ip=192.168.1.103
port=27017
oplogSize=10000
fork=true
noprealloc=tru
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数名称&lt;/th&gt;
      &lt;th&gt;参数说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;dbpath&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;数据存储目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;logpath&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;日志存放目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;pidfilepath&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;进程PID文件位置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;directoryperdb&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;按数据库名称创建文件夹存储数据&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;logappend&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;以追加的方式记录日志&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;replSet&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;副本集的名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;bind_ip&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;本地绑定的IP地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;port&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;启动的端口号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;oplogSize&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;日志文件的最大大小，单位MB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;fork&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;以后台的方式运行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;noprealloc&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;不预先分配存储&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;33-启动mongodb&quot;&gt;3.3 启动mongodb&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./mongod -f master.conf &lt;span class=&quot;c&quot;&gt;# 启动主节点mongodb&lt;/span&gt;

./mongod -f slave.conf &lt;span class=&quot;c&quot;&gt;# 启动备节点mongodb&lt;/span&gt;

./mongod -f arbiter.conf &lt;span class=&quot;c&quot;&gt;# 启动仲裁节点mongodb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;34-配置主备仲裁节点&quot;&gt;3.4 配置主备仲裁节点&lt;/h3&gt;

&lt;p&gt;连接进入主节点服务器，进入&lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;数据库进行配置，如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 连接进入&lt;/span&gt;
./mongo 192.168.1.101:27017
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;use admin &lt;span class=&quot;c&quot;&gt;# 进入admin集合&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;_id:&lt;span class=&quot;s2&quot;&gt;&quot;bid&quot;&lt;/span&gt;, members:[
...&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;_id:0,host:&lt;span class=&quot;s1&quot;&gt;'192.168.1.101.130:27017'&lt;/span&gt;,priority:2&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
...&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;_id:1,host:&lt;span class=&quot;s1&quot;&gt;'192.168.1.102:27017'&lt;/span&gt;,priority:1&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
...&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;_id:2,host:&lt;span class=&quot;s1&quot;&gt;'192.168.1.102'&lt;/span&gt;,arbiterOnly:true&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;rs.initiate&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 执行配置初始化&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;rs.status&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 查看配置生效&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;_id&lt;/strong&gt; 是各个mongodb配置文件中配置的副本集名称，&lt;strong&gt;members&lt;/strong&gt; 包含集群的节点的地址及优先级，优先级最高的是主节点。仲裁节点需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;arbiterOnly:true&lt;/code&gt;进行指定。&lt;/p&gt;

&lt;p&gt;执行&lt;code class=&quot;highlighter-rouge&quot;&gt;rs.initiate(config)&lt;/code&gt;完成后，等待一段时间后执行&lt;code class=&quot;highlighter-rouge&quot;&gt;rs.status()&lt;/code&gt;查看配置是否已经生效。同时需要分别查看各个节点的日志文件是否已经开始执行数据同步。&lt;/p&gt;

&lt;h2 id=&quot;4-总结&quot;&gt;4. 总结&lt;/h2&gt;

&lt;p&gt;至此所有配置已经完成，由此可见副本集的配置比较简单，测试时可以向主节点插入数据时是否可以正常同步到备份节点中。当关闭主节点，仲裁节点是否会自动将备节点选举为主节点，且数据不会丢失，客户端连接正常。&lt;/p&gt;

&lt;p&gt;另外客户端连接mongodb集群，&lt;strong&gt;只需要连接主和备节点地址，仲裁节点不需要指定连接&lt;/strong&gt;。&lt;/p&gt;
</description>  
               <pubDate>Fri, 09 Dec 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/12/mongodb-replica/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/12/mongodb-replica/</guid>  
               </item>  
          
            <item>  
               <title>高可用的mongodb:master-slave配置</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-master-slave模式&quot; id=&quot;markdown-toc-1-master-slave模式&quot;&gt;1. master-slave模式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-mongodb的主从master-slave模式&quot; id=&quot;markdown-toc-2-mongodb的主从master-slave模式&quot;&gt;2. MongoDB的主从master-slave模式&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-环境准备&quot; id=&quot;markdown-toc-21-环境准备&quot;&gt;2.1 环境准备&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-下载安装包并分别创建数据目录&quot; id=&quot;markdown-toc-22-下载安装包并分别创建数据目录&quot;&gt;2.2 下载安装包并分别创建数据目录&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-分别启动主从节点的mongodb&quot; id=&quot;markdown-toc-23-分别启动主从节点的mongodb&quot;&gt;2.3 分别启动主从节点的mongodb&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-验证主从配置&quot; id=&quot;markdown-toc-3-验证主从配置&quot;&gt;3 验证主从配置&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-数据同步测试&quot; id=&quot;markdown-toc-31-数据同步测试&quot;&gt;3.1 数据同步测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-故障转移测试&quot; id=&quot;markdown-toc-32-故障转移测试&quot;&gt;3.2 故障转移测试&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-mongodb主从模式结论&quot; id=&quot;markdown-toc-4-mongodb主从模式结论&quot;&gt;4. MongoDB主从模式结论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-master-slave模式&quot;&gt;1. master-slave模式&lt;/h2&gt;

&lt;p&gt;主从模式可以避免单机故障，双机备份后，若主节点挂掉，从节点可以接替主节点继续服务。主节点数据的录入会实时同步到从节点上。&lt;/p&gt;

&lt;h2 id=&quot;2-mongodb的主从master-slave模式&quot;&gt;2. MongoDB的主从master-slave模式&lt;/h2&gt;

&lt;h3 id=&quot;21-环境准备&quot;&gt;2.1 环境准备&lt;/h3&gt;

&lt;p&gt;两台服务器，一台用作主节点，一台用作从节点，如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;192.168.1.101 (主节点)&lt;/li&gt;
  &lt;li&gt;192.168.1.102 (从节点)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;22-下载安装包并分别创建数据目录&quot;&gt;2.2 下载安装包并分别创建数据目录&lt;/h3&gt;

&lt;p&gt;从 MongoDB官网下载安装包，地址：&lt;a href=&quot;http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-2.4.9.tgz&quot;&gt;http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-2.4.9.tgz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;分别上传到主从服务器中并解压，分别创建各自的数据目录，如下：&lt;/p&gt;

&lt;p&gt;主节点数据目录：&lt;strong&gt;/root/mongodb-linux-x86_64-2.4.9/data/master&lt;/strong&gt;
从节点数据目录：&lt;strong&gt;/root/mongodb-linux-x86_64-2.4.9/data/slave&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;数据目录可以随意创建，这里只是为了区分主从，也可以直接各自指定 &lt;strong&gt;{MONGODB_HOME}/data&lt;/strong&gt;目录即可。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;23-分别启动主从节点的mongodb&quot;&gt;2.3 分别启动主从节点的mongodb&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;启动主节点上（192.168.1.101）的 MongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./mongod --dbpath /root/mongodb-linux-x86_64-2.4.9/data/master --master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;启动从节点上（192.168.1.102）的 MongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./mongod --dbpath /root/mongodb-linux-x86_64-2.4.9/data/slave --slave --source 192.168.1.101:27017
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;–master&lt;/strong&gt; 表明此节点是作为主节点使用，&lt;strong&gt;–slave&lt;/strong&gt; 和 &lt;strong&gt;–source&lt;/strong&gt; 表示节点是从节点且主节点的源地址是哪里。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;主从的启动仔细观察日志可以看出是否启动成功，在从节点上可以使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;db.printReplicationInfo()&lt;/code&gt;进行查看。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-验证主从配置&quot;&gt;3 验证主从配置&lt;/h2&gt;

&lt;h3 id=&quot;31-数据同步测试&quot;&gt;3.1 数据同步测试&lt;/h3&gt;

&lt;p&gt;进入主节点的&lt;code class=&quot;highlighter-rouge&quot;&gt;mongodb&lt;/code&gt;环境，创建一条数据&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;./mongo 192.168.1.101:27017
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;use demo;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;db.post.insert&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;AAAAAA&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;db.post.find&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_id&quot;&lt;/span&gt; : ObjectId&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;5284e5cb1f4eb215b2ecc463&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;AAAAAA&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;此时查看日志，发现新添加的数据已经同步到子节点上。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;进入子节点的&lt;code class=&quot;highlighter-rouge&quot;&gt;mongodb&lt;/code&gt;环境，查看主节点上创建的数据&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;./mongo 192.168.1.102:27017
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;use demo;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;db.post.find&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_id&quot;&lt;/span&gt; : ObjectId&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;5284e5cb1f4eb215b2ecc463&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;AAAAAA&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;从子节点上可以看出，主节点上创建的任何数据都会实时同步到子节点上，这样主从模式基本就形成了。&lt;/p&gt;

&lt;h3 id=&quot;32-故障转移测试&quot;&gt;3.2 故障转移测试&lt;/h3&gt;

&lt;p&gt;从节点上不允许插入数据，只允许读，插入数据时会提示 &lt;strong&gt;no master&lt;/strong&gt; 错误。&lt;/p&gt;

&lt;p&gt;关闭主节点后，从节点会不断尝试连接主节点，还是只读模式，并不能自动切换成主节点，&lt;/p&gt;

&lt;h2 id=&quot;4-mongodb主从模式结论&quot;&gt;4. MongoDB主从模式结论&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; 的主从配置很简单，主从模式只有数据同步没有&lt;strong&gt;master&lt;/strong&gt;节点自动转移功能，当主节点不可用时，需要手动将从节点升级成master。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;从节点手动升级为主节点：./mongod –dbpath /root/mongodb-linux-x86_64-2.4.9/data/slave –master&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;./mongod –dbpath /Volumes/TOD/mongodb-osx-x86_64-2.0.6/data/replset0 –replSet replse&lt;/p&gt;
</description>  
               <pubDate>Sat, 03 Dec 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/12/mongodb-master-slave/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/12/mongodb-master-slave/</guid>  
               </item>  
          
            <item>  
               <title>Kali系统中使用smbclient访问windows共享目录</title>  
               <description>&lt;p&gt;在类似与&lt;strong&gt;kali&lt;/strong&gt;系统的&lt;strong&gt;Linux&lt;/strong&gt;环境中，若要访问windows共享目录，即smb协议的目录共享机制，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;smbclient&lt;/code&gt;工具进行访问。&lt;/p&gt;

&lt;p&gt;当然除了可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;smbclient&lt;/code&gt;命令行的方式，还可以直接在资源管理器中使用&lt;strong&gt;smb&lt;/strong&gt;协议进行访问，如&lt;code class=&quot;highlighter-rouge&quot;&gt;smb://192.168.1.22&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;smbclient的使用方法&quot;&gt;smbclient的使用方法&lt;/h1&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 列出目标主机所有共享目录&lt;/span&gt;
smbclient -L 192.168.1.22 -U administrator

&lt;span class=&quot;c&quot;&gt;# 访问目标主机指定的共享目录&lt;/span&gt;
smbclient //192.168.1.22/test -U administrator

&lt;span class=&quot;c&quot;&gt;# 带密码的访问目标主机指定共享目录&lt;/span&gt;
smbclient //192.168.1.198/test -U administrator 123321
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Wed, 16 Nov 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/11/use-smbclient-in-kali/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/11/use-smbclient-in-kali/</guid>  
               </item>  
          
            <item>  
               <title>Veil-Evasion与Armitage的集成操作</title>  
               <description>&lt;p&gt;&lt;a href=&quot;https://www.veil-framework.com/framework/veil-evasion/&quot;&gt;veil-evasion&lt;/a&gt; 是有名的终端下后门生成工具，其免杀效果表现的非常好。&lt;strong&gt;armitage&lt;/strong&gt; 是 metasploit 的图形化操作界面，本文就两者如何集成进行简单说明。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;kali&lt;/strong&gt; 系统下 &lt;strong&gt;armitage&lt;/strong&gt; 是默认安装的， &lt;strong&gt;veil-evasion&lt;/strong&gt; 是需要独立进行安装的，下载地址 &lt;a href=&quot;https://www.veil-framework.com/framework/veil-evasion/&quot;&gt;https://www.veil-framework.com/framework/veil-evasion&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;1-启动-posgresql-数据库&quot;&gt;1. 启动 posgresql 数据库&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;armitage&lt;/strong&gt; 的启动依赖于 &lt;strong&gt;postgresql&lt;/strong&gt; 数据库，与 &lt;strong&gt;metasploit&lt;/strong&gt; 共享信息。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service postgresql start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;2-打开-armitage-加载-veil-evasion-模块&quot;&gt;2. 打开 armitage 加载 veil-evasion 模块&lt;/h1&gt;

&lt;p&gt;依次点击 &lt;strong&gt;armitage&lt;/strong&gt; 菜单，Armitage - Scripts，点击 Load 按钮定位到 &lt;strong&gt;veil-evasion&lt;/strong&gt; 的安装目录中找到 &lt;strong&gt;armitage&lt;/strong&gt; 的扩展文件 &lt;strong&gt;veil-evasion/tools/cortanaveil_evasion.cna&lt;/strong&gt; 加载，加载完成后就会在 &lt;strong&gt;armitage&lt;/strong&gt; 的菜单中看见 &lt;strong&gt;Veil-Evasion&lt;/strong&gt; 的菜单已经被加载到了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/armitage-veilevasion_1.png&quot; alt=&quot;armitage1&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-测试生成-payload&quot;&gt;3. 测试生成 payload&lt;/h1&gt;

&lt;p&gt;点击 &lt;strong&gt;armitage&lt;/strong&gt; 上的 &lt;strong&gt;Veil-Evasion&lt;/strong&gt; 菜单，首次运行会提示输入完整的 &lt;strong&gt;veil-evasion&lt;/strong&gt; 安装路径。配置好生成参数，点击 Generate 按钮即可生成后门文件，也可以点击 Use Listener 按钮开启对后门的监听。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/armitage-veilevasion_2.png&quot; alt=&quot;armitage2&quot; /&gt;&lt;/p&gt;

</description>  
               <pubDate>Tue, 01 Nov 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/11/veilevasion-and-armitage/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/11/veilevasion-and-armitage/</guid>  
               </item>  
          
            <item>  
               <title>服务器上的iptables防火墙应该如何配置才能更安全</title>  
               <description>&lt;p&gt;新入网的服务器在不做任何配置的情况下将会出现很多安全问题。端口肆意暴露、来源请求不明，恶意的数据包源源不断的流入服务器中。&lt;/p&gt;

&lt;p&gt;公有云或许会控制非常用端口的访问，只开通如22、80、8080或者8443这样的常用端口，尽管屏蔽了大多数端口，但有效的做好防火墙规则仍然很重要。&lt;/p&gt;

&lt;p&gt;下面流程化说明防火墙配置步骤&lt;/p&gt;

&lt;h1 id=&quot;1-封口&quot;&gt;1. 封口&lt;/h1&gt;

&lt;p&gt;将输入、输出、转向的数据包丢弃，对服务器进行彻底隔离，在封闭的环境中配置规则。这里值得提醒的是此操作需要在本机执行，因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;telnet&lt;/code&gt; 或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; 的连接会当即断开。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# 丢弃输入数据流向 &lt;/span&gt;
iptables -P INPUT DROP
 &lt;span class=&quot;c&quot;&gt;# 丢弃输出数据流向 &lt;/span&gt;
iptables -P OUTPUT DROP
 &lt;span class=&quot;c&quot;&gt;# 丢弃转向数据流向 &lt;/span&gt;
iptables -P FORWARD DROP
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;2-开放ssh服务&quot;&gt;2. 开放SSH服务&lt;/h1&gt;

&lt;p&gt;首先确保 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; 远程连接开放，添加对 ssh 服务的出入站规则，正常端口为22（端口应该更换成非22）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 允许任务来源接入服务器的22端口&lt;/span&gt;
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
&lt;span class=&quot;c&quot;&gt;# 允许服务器通过22端口向任何来源发送数据包&lt;/span&gt;
iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;做好以上的 ssh 服务规则后，任何来源等可以连接，若要求更高级的安全则可以添加准入IP，可以添加多条，其他服务同理。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 允许来源IP为221.4.12.28的地址访问服务器的22端口，即ssh服务&lt;/span&gt;
iptables -I INPUT -s 221.4.12.28 -p tcp --dport 22 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;3-启用ping命令&quot;&gt;3. 启用Ping命令&lt;/h1&gt;

&lt;p&gt;当执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt; 命令时，其实是向目标地址发送 &lt;strong&gt;icmp&lt;/strong&gt; 的数据包并得到回显信息。在服务器内部 ping 外部地址时，属于 &lt;strong&gt;OUTPUT&lt;/strong&gt;，由于服务器的输出已经被DROP掉，所以服务器目前 ping 不通任何外部 IP 地址，考虑到运维的需要，添加允许 ping 外部IP的规则。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 允许服务器向外部发送icmp的数据包&lt;/span&gt;
iptables -A OUTPUT -p icmp --icmp-type &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;-request -j ACCEPT
&lt;span class=&quot;c&quot;&gt;# 允许服务器接收来自外部服务器返回的icmp数据包&lt;/span&gt;
iptables -A INPUT -p icmp --icmp-type &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;-reply -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;目前服务器可以 ping 外部IP地址了，但外部来源 ping 服务器是不通的。&lt;strong&gt;选择不开放来自外部的 ping 请求或许是一个好想法&lt;/strong&gt;，这样可以迷惑扫描工具避免暴露主机的存活性(高级的扫描工具除外，如 nmap)。&lt;/p&gt;

&lt;p&gt;下面是服务器接收和响应 ping 请求的出入站规则&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 允许任何来源向服务器发送icmp的数据包&lt;/span&gt;
iptables -A INPUT -p icmp --icmp-type &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;-request -j ACCEPT
&lt;span class=&quot;c&quot;&gt;# 允许服务器向任何来源回显icmp的数据包&lt;/span&gt;
iptables -A OUTPUT -p icmp --icmp-type &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;-reply -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;4-启用dns服务&quot;&gt;4. 启用DNS服务&lt;/h1&gt;

&lt;p&gt;服务器 ping 外部IP地址正常了，但 ping 外部的域名时则会显示 &lt;strong&gt;unknown host&lt;/strong&gt; 的错误，这是因为 DNS 服务的53端口没有配置出入站规则。&lt;/p&gt;

&lt;p&gt;下面是 DNS 服务的规则:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A INPUT -p udp -i eth0 --sport 53 -j ACCEPT
iptables -A OUTPUT -p udp -o eth0 --dport 53 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;5-下载软件&quot;&gt;5. 下载软件&lt;/h1&gt;

&lt;p&gt;现在服务器需要从外部下载某些软件，通常我们会使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; 或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; 这样的工具，执行时发现一直卡着不动。这是因为服务器访问外网的80端口出站和入站规则没有配置，需要添加，如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --sport 80 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：使用类似与nginx代理转发到内网主机上某个服务时，同样也需要添加如上规则。如转发到内网 &lt;strong&gt;192.168.1.22&lt;/strong&gt; 上的 &lt;strong&gt;48443&lt;/strong&gt;的服务，规则如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A OUTPUT -p tcp --dport 48843 -j ACCEPT
iptables -A INPUT -p tcp --sport 48843 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;6-启用本地回路loopback&quot;&gt;6. 启用本地回路loopback&lt;/h1&gt;

&lt;p&gt;本地回路即 &lt;strong&gt;localhost&lt;/strong&gt;，运维时通常会使用本地回路判断某些服务是否正常，这个必要有。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;7-应用端规则&quot;&gt;7. 应用端规则&lt;/h1&gt;

&lt;p&gt;应用端规则指的是如 nginx、apache 等应用，启动后，默认情况下外网是不能访问的。如需要开通 nginx 的 &lt;strong&gt;80&lt;/strong&gt; 和 &lt;strong&gt;443&lt;/strong&gt; 端口，其他应用类似。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT
iptables -A OUTPUT -p tcp --sport 443 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;经过上面配置，基本能满足服务器端的安全需要，由于目前操作系统已经趋于成熟化，补丁打的及时基本可以杜绝服务器端被黑。大多数情况是部署在服务器上自身的应用存在问题，所以仅仅控制好服务器上的访问权还是不行，更多的是应用程序的安全稳定性才是关键。&lt;/p&gt;
</description>  
               <pubDate>Mon, 12 Sep 2016 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/09/iptables-security-policy/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/09/iptables-security-policy/</guid>  
               </item>  
          
            <item>  
               <title>maven集成ant错误optional.ReplaceRegExp was not found</title>  
               <description>&lt;p&gt;当在 &lt;code class=&quot;highlighter-rouge&quot;&gt;Maven&lt;/code&gt; 构建的项目中集成 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ant&lt;/code&gt; 时，在执行非 &lt;strong&gt;Ant&lt;/strong&gt; 核心任务时，会出现 &lt;strong&gt;可选任务不存在&lt;/strong&gt; 的错误，如本文中执行文本 &lt;strong&gt;回车换行&lt;/strong&gt; 的替换操作，需要使用 &lt;strong&gt;ReplaceRegexp&lt;/strong&gt; 的任务去替换文本中的 &lt;strong&gt;^M&lt;/strong&gt; 符号。&lt;/p&gt;

&lt;h2 id=&quot;异常输出&quot;&gt;异常输出&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ERROR] Cause: the class org.apache.tools.ant.taskdefs.optional.ReplaceRegExp was not found.
[ERROR] This looks like one of Ant's optional components.
[ERROR] Action: Check that the appropriate optional JAR exists in
[ERROR] -ANT_HOME/lib
[ERROR] -the IDE Ant configuration dialogs
[ERROR] 
[ERROR] Do not panic, this is a common problem.
[ERROR] The commonest cause is a missing JAR.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;出错原因&quot;&gt;出错原因&lt;/h2&gt;

&lt;p&gt;在终端中手动执行 &lt;strong&gt;Ant&lt;/strong&gt; 任务不会出错，使用 &lt;strong&gt;maven&lt;/strong&gt; 执行时会出现此类问题。原因是执行 &lt;strong&gt;Ant&lt;/strong&gt; 命令时，所有核心任务的库已经包含在 &lt;strong&gt;Ant&lt;/strong&gt; 的安装包里。而在用 &lt;strong&gt;Maven&lt;/strong&gt; 调用 &lt;strong&gt;Ant&lt;/strong&gt; 执行时会使用自身的 &lt;strong&gt;Ant&lt;/strong&gt; 环境，而 &lt;strong&gt;Maven&lt;/strong&gt; 自身只集成了基本的 &lt;strong&gt;Ant&lt;/strong&gt;，所以需要告诉 &lt;strong&gt;Maven&lt;/strong&gt; 下载并使用对应的可选任务库。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;修改后的部分配置如下&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;......
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-antrun-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;goals&amp;gt;&amp;lt;goal&amp;gt;&lt;/span&gt;run&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goal&amp;gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;tasks&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;replaceregexp&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;#13;&amp;amp;#10;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;#10;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flags=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;g&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;byline=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;fileset&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dir=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${project.basedir}/target/${project.build.finalName}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bin/*.sh&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;conf/*.properties&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server/WEB-INF/class/*.xml&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/fileset&amp;gt;&lt;/span&gt;
                   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/replaceregexp&amp;gt;&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tasks&amp;gt;&lt;/span&gt;
           &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
       &lt;span class=&quot;nt&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 添加ant可选任务的依赖文件 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;ant&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;ant-nodeps&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.6.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;ant&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;ant-apache-regexp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.6.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jakarta-regexp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;jakarta-regexp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
......
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面是 &lt;strong&gt;Maven&lt;/strong&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt; 文件的部分配置，通过给 &lt;code class=&quot;highlighter-rouge&quot;&gt;maven-antrun-plugin&lt;/code&gt; 插件添加相关的 &lt;strong&gt;Ant&lt;/strong&gt; 依赖就可以解决此类问题。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;第二种方法，就是在 &lt;strong&gt;Maven&lt;/strong&gt; 的配置文件中手动指定需要使用本地的 &lt;strong&gt;Ant&lt;/strong&gt; 环境。&lt;/p&gt;
&lt;/blockquote&gt;

</description>  
               <pubDate>Sat, 10 Sep 2016 12:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/09/maven-err-replaceregexp/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/09/maven-err-replaceregexp/</guid>  
               </item>  
          
            <item>  
               <title>jdk1.8 高效stream流的遍历、聚合示例代码</title>  
               <description>&lt;p&gt;&lt;strong&gt;jdk1.8&lt;/strong&gt; 对于集合流的处理使用起来很方便，集合 &lt;strong&gt;Lambda&lt;/strong&gt; 表达式可以节省很多对于集合处理的代码，下面是一些常用流处理的示例代码。&lt;/p&gt;

&lt;h2 id=&quot;从集合或数组中获取流对象&quot;&gt;从集合或数组中获取流对象&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 从数组创建流，两种方法&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;张三&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;李四&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;female&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;王五&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;马六&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 从集合创建流，调用集合类的stream()方法&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;张三&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;李四&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;female&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;王五&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;马六&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;串行与并行流&quot;&gt;串行与并行流&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/*
 * 并行流在对大数据集合的聚合操作时会非常高效，并行流利用多核多处理器的硬件并行对数据进行计算汇总。
 * 数据小的情况下不建议使用并行流。
 */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;对流的遍历操作&quot;&gt;对流的遍历操作&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 遍历大于25岁的用户并输出其姓名&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 获取年龄大于25岁的用户集合&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 使用Predicate对象作为条件获取年龄大于25的用户并输出其姓名&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Predicate对象可以追加更多的条件，如and、or等等&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Predicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;对流的聚合操作&quot;&gt;对流的聚合操作&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 汇总所有用户的年龄总和&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 汇总所有用户的年龄平均值&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;average&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAsDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;average&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAsDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 按性别统计用户数，输出&quot;{female=1, male=3}&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;groupingBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;summingInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 按性别获取用户名称，输出&quot;{female=[李四], male=[张三, 王五, 马六]}&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;groupingBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 按性别求年龄总和，输出&quot;{female=21.0, male=26.333333333333332}&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;groupingBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;averagingInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;User:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Thu, 08 Sep 2016 12:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2016/09/jdk18-stream-demo/</link>  
               <guid isPermaLink="true">http://localhost:4000/2016/09/jdk18-stream-demo/</guid>  
               </item>  
          
    </channel>  
</rss>
