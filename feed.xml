<?xml version="1.0" encoding="UTF-8"?>  
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">  
    <channel>  
        <title></title>  
        <description>王俊博客，软件改变世界！王俊博客是作者个人知识库、是记录历程回顾的笔记本、是经验教训的资源池， 旨在促进软件开发领域知识与创新的传播，为软件开发中提供帮助。更多是作者本人的经验积累。
</description>  
        <link>http://localhost:4000</link>  
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />  
          
            <item>  
               <title>Linux个人常用命令汇总收集（不断更新）</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#linux个人常用命令汇总&quot; id=&quot;markdown-toc-linux个人常用命令汇总&quot;&gt;Linux个人常用命令汇总&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#查看端口被谁占用&quot; id=&quot;markdown-toc-查看端口被谁占用&quot;&gt;查看端口被谁占用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#递归删除指定文件&quot; id=&quot;markdown-toc-递归删除指定文件&quot;&gt;递归删除指定文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#内存cache占用大&quot; id=&quot;markdown-toc-内存cache占用大&quot;&gt;内存cache占用大&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;linux个人常用命令汇总&quot;&gt;Linux个人常用命令汇总&lt;/h1&gt;

&lt;h2 id=&quot;查看端口被谁占用&quot;&gt;查看端口被谁占用&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsof -i:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;递归删除指定文件&quot;&gt;递归删除指定文件&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name &lt;span class=&quot;s2&quot;&gt;&quot;*.bak&quot;&lt;/span&gt; -exec rm &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
find . -name &lt;span class=&quot;s2&quot;&gt;&quot;*.c&quot;&lt;/span&gt; | xargs rm -rf;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;内存cache占用大&quot;&gt;内存cache占用大&lt;/h2&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;free -m&lt;/code&gt;时会发现内存的&lt;strong&gt;cache&lt;/strong&gt;段缓存的过多，导致内存不够用，可以使用以下命令进行清空。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;free -m
             total       used       free     shared    buffers     cached
Mem:         15888      15226        661        248        624       5123
-/+ buffers/cache:       9479       6408
Swap:          499          0        499
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sync;
sync;
sync;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;3 &amp;gt; /proc/sys/vm/drop_caches
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;此命令有风险，会破坏内存中存储的数据，尤其不要在Oracle服务器中使用&lt;/p&gt;
&lt;/blockquote&gt;
</description>  
               <pubDate>Sun, 23 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/linux-skill-gather/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/linux-skill-gather/</guid>  
               </item>  
          
            <item>  
               <title>Debain防火墙规则保存</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#debain防火墙规则保存&quot; id=&quot;markdown-toc-debain防火墙规则保存&quot;&gt;Debain防火墙规则保存&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-背景&quot; id=&quot;markdown-toc-1-背景&quot;&gt;1. 背景&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-步骤&quot; id=&quot;markdown-toc-2-步骤&quot;&gt;2. 步骤&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#21-保存规则&quot; id=&quot;markdown-toc-21-保存规则&quot;&gt;2.1 保存规则&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-启动文件&quot; id=&quot;markdown-toc-22-启动文件&quot;&gt;2.2 启动文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-文件内容&quot; id=&quot;markdown-toc-23-文件内容&quot;&gt;2.3 文件内容&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;debain防火墙规则保存&quot;&gt;Debain防火墙规则保存&lt;/h1&gt;

&lt;h2 id=&quot;1-背景&quot;&gt;1. 背景&lt;/h2&gt;

&lt;p&gt;配置好防火墙规则后，为防止服务器重启导致配置的规则被清除，应该将防火墙规则进行文件保存，在启动时进行自动加载。&lt;/p&gt;

&lt;h2 id=&quot;2-步骤&quot;&gt;2. 步骤&lt;/h2&gt;

&lt;h2 id=&quot;21-保存规则&quot;&gt;2.1 保存规则&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 将现有防火墙规则保存到/etc/iptables文件中&lt;/span&gt;
iptables-save &amp;gt; /etc/iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;22-启动文件&quot;&gt;2.2 启动文件&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 创建启动脚本文件&lt;/span&gt;
touch /etc/network/if-pre-up.d/iptables
&lt;span class=&quot;c&quot;&gt;# 赋予执行权限&lt;/span&gt;
chmod u+x /etc/network/if-pre-up.d/iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;23-文件内容&quot;&gt;2.3 文件内容&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 编辑启动配置文件&lt;/span&gt;
vi /etc/network/if-pre-up.d/iptables

&lt;span class=&quot;c&quot;&gt;# 文件内容为还原保存的防火墙配置规则&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
/sbin/iptables-restore &amp;lt; /etc/iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Mon, 17 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/debain-save-iptables/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/debain-save-iptables/</guid>  
               </item>  
          
            <item>  
               <title>Gitlab重置管理员密码</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#gitlab重置管理员密码&quot; id=&quot;markdown-toc-gitlab重置管理员密码&quot;&gt;Gitlab重置管理员密码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;gitlab重置管理员密码&quot;&gt;Gitlab重置管理员密码&lt;/h1&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;su - git
&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/gitlab-8.12.6-0/apps/gitlab/htdocs
&lt;span class=&quot;gp&quot;&gt;shell&amp;gt; &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails console production
&lt;span class=&quot;c&quot;&gt;# email为需要更改密码的用户账户&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;irb(main):001:0&amp;gt; &lt;/span&gt;user &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; User.where&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;email: &lt;span class=&quot;s1&quot;&gt;'jun.wang@vinny.cn'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.first
&lt;span class=&quot;c&quot;&gt;# 密码必须至少8个字符&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;irb(main):002:0&amp;gt; &lt;/span&gt;user.password &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'123456'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 返回true表示修改成功&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;irb(main):003:0&amp;gt; &lt;/span&gt;user.save!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Sun, 16 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/gitlab-reset-admin-pwd/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/gitlab-reset-admin-pwd/</guid>  
               </item>  
          
            <item>  
               <title>C#无焦点扫码实现方案</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#c无焦点扫码实现方案&quot; id=&quot;markdown-toc-c无焦点扫码实现方案&quot;&gt;C#无焦点扫码实现方案&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-背景说明&quot; id=&quot;markdown-toc-1-背景说明&quot;&gt;1. 背景说明&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-程序说明&quot; id=&quot;markdown-toc-2-程序说明&quot;&gt;2. 程序说明&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-调用方法&quot; id=&quot;markdown-toc-3-调用方法&quot;&gt;3. 调用方法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-中文问题&quot; id=&quot;markdown-toc-3-中文问题&quot;&gt;3. 中文问题&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-源码下载&quot; id=&quot;markdown-toc-4-源码下载&quot;&gt;4. 源码下载&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;c无焦点扫码实现方案&quot;&gt;C#无焦点扫码实现方案&lt;/h1&gt;

&lt;h2 id=&quot;1-背景说明&quot;&gt;1. 背景说明&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;无焦点扫码&lt;/strong&gt; 的意思是在没有选择输出源载体的情况下捕获扫枪的扫码事件，即没有聚焦输出源（记事本、文本框等）获取条码／二维码中的内容。&lt;/p&gt;

&lt;h2 id=&quot;2-程序说明&quot;&gt;2. 程序说明&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BarCodeHook&lt;/code&gt;类是用于全局注册键盘钩子的核心类，一般不需要更改，直接放到工程中。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ScanCodeForm&lt;/code&gt;类是具体调用BarCodeHook类的窗体，为了便于测试此窗体中输出使用无焦点的Label控件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-调用方法&quot;&gt;3. 调用方法&lt;/h2&gt;

&lt;p&gt;下面&lt;code class=&quot;highlighter-rouge&quot;&gt;ScanCodeForm&lt;/code&gt;源码是具体怎么调用&lt;code class=&quot;highlighter-rouge&quot;&gt;BarCodeHook&lt;/code&gt;类的窗体代码，此窗体含有两个Label，一个用于最终输出条码/二维码内容的&lt;strong&gt;codeLabel&lt;/strong&gt;，一个是临时的&lt;strong&gt;tempLabel&lt;/strong&gt;，这个临时的&lt;strong&gt;tempLabel&lt;/strong&gt;不需要显示，设置为不可见即可，只是用于临时保存扫枪的字符数据，使用时你的窗体必须包含此控件，通过它的&lt;em&gt;textChange&lt;/em&gt;事件最终拿到扫枪的输入值。&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.ComponentModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Drawing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;NoFocusScan&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ScanCodeForm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 定义BarCodeHook对象及其委托方法
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShowInfoDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ScanCodeForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;InitializeComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ScanCodeForm_Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 注册扫枪委托事件
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeEvent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;BarCodeDeletegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 启动扫码钩子
&lt;/span&gt;            &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codeLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;等待扫码...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codeLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;启动失败&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BarCodeEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;ShowInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShowInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCodes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InvokeRequired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;BeginInvoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShowInfoDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShowInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 使用隐藏的tempLabel来储存扫码字符，扫码读取会改变隐藏label的字符，
&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 同时触发自身的tempLabel_TextChanged事件
&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsValid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BarCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// Form窗体关闭事件
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ScanCodeForm_FormClosed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FormClosedEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 卸载注册的钩子
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;barCodeHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// 扫码读取的字符事件
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tempLabel_TextChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 这里code就是最终得到的条码/二维码字符
&lt;/span&gt;            &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;codeLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 扫完得到二维码就清空临时tempLabel，避免再次进入textchange事件
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel_TextChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextChanged&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempLabel_TextChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-中文问题&quot;&gt;3. 中文问题&lt;/h2&gt;

&lt;p&gt;条形码的输出是字母或者数字，不会有问题。二维码可能含有中文或Unicode等字符时，一般不能正常读取到。首先确认的是二维码扫枪是否支持中文解码，支持中文的二维码扫枪因为需要内置解码器所以成本较高，市面上目前现在大部分的二维码扫枪都不可以支持中文。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BarCodeHook&lt;/code&gt;类未测试支持中文的二维码扫枪&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-源码下载&quot;&gt;4. 源码下载&lt;/h2&gt;

&lt;p&gt;链接: &lt;a href=&quot;http://pan.baidu.com/s/1o8oLe7w&quot;&gt;http://pan.baidu.com/s/1o8oLe7w&lt;/a&gt;  密码: &lt;strong&gt;tdei&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NoFocusScan.zip&lt;/strong&gt;源码保存在个人百度网盘的&lt;strong&gt;博客保存的源码&lt;/strong&gt;目录中（给自己看的）&lt;/p&gt;
&lt;/blockquote&gt;

</description>  
               <pubDate>Sat, 15 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/no-focus-scan/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/no-focus-scan/</guid>  
               </item>  
          
            <item>  
               <title>C#串口获取称重设备的实现方案</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#c串口获取称重设备的实现方案&quot; id=&quot;markdown-toc-c串口获取称重设备的实现方案&quot;&gt;C#串口获取称重设备的实现方案&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-串口概念&quot; id=&quot;markdown-toc-1-串口概念&quot;&gt;1. 串口概念&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-一些提示&quot; id=&quot;markdown-toc-2-一些提示&quot;&gt;2. 一些提示&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-实现代码&quot; id=&quot;markdown-toc-3-实现代码&quot;&gt;3. 实现代码&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-测试程序&quot; id=&quot;markdown-toc-4-测试程序&quot;&gt;4. 测试程序&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;c串口获取称重设备的实现方案&quot;&gt;C#串口获取称重设备的实现方案&lt;/h1&gt;

&lt;h2 id=&quot;1-串口概念&quot;&gt;1. 串口概念&lt;/h2&gt;

&lt;p&gt;串口即是com口，笔记本电脑没有串口，现在的台式机有串口的也很少，需要另配串口卡，一般位于机箱后面的9针公口（非VGA口）。实现串口通信的协议有多种，常用的是&lt;strong&gt;RS232&lt;/strong&gt;协议，只要输入设备存在串口就可以通过标准协议读取此设备的数据。&lt;/p&gt;

&lt;p&gt;串口通信是双向的，既可以获取数据，也可以向设备发送指令数据，这个要看设备具体是否支持指令的发送。通常发送指令的目的是变更设置、获取数据（非连续输出）、开关设备等。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文中的串口设备使用的称重设备，电子秤、地磅，只负责读取，不写入。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-一些提示&quot;&gt;2. 一些提示&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;串口线&lt;/strong&gt; 购买串口线时需要看清楚设备的串口是9针的还是25针的、公口还是母口。串口线是否支持热插拨，&lt;strong&gt;不支持热插拨的串口线，需要关闭电源再进行插入和拔出，否则串口线会损坏&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;参数调整&lt;/strong&gt; 需要接入的串口设备通常情况下都是出厂设置，需要手动配置或查看此设备的波特率、校验位、数据位、传输方式等信息，说明书或仪表盘上可以得到。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;波特率使用设备缺省的即可，若将设备的校验位设置为空，则数据位随意。传输方式需要设置为连续输出，连续输出的意思是当COM口打开时设备不停的向串口发送数据，除了连续输出还有指令输出，即只有发送指令设备才向COM口发送数据。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-实现代码&quot;&gt;3. 实现代码&lt;/h2&gt;

&lt;p&gt;使用&lt;strong&gt;C#&lt;/strong&gt;操作串口使用&lt;code class=&quot;highlighter-rouge&quot;&gt;SerialPort&lt;/code&gt;类，实现的步骤为设置串口参数、打开串口监听、获取数据事件、关闭串口，主要代码如下：&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// -------------------- 定义串口对象及委托事件 --------------------
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SerialPort&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UpdateTextEventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UpdateTextEventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updateText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SerialForm_Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 注册委托事件，核心
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;updateText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UpdateTextEventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UpdateTextBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;button1_Click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PortName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;COM1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 使用哪个串口
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BaudRate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 波特率
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataBits&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 数据位
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Parity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 校验位
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StopBits&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StopBits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 停止位
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReceivedBytesThreshold&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataReceived&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SerialDataReceivedEventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Com_SerialPort_DataReceive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Com_SerialPort_DataReceive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SerialDataReceivedEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 时间短可能导致数据读取不完整
&lt;/span&gt;	&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Com_SerialPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ReadExisting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updateText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 核心方法，当打开串口时，串口设备会不停调用此方法
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UpdateTextBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这里的text就是设备输入的数据
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;label1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;每个设备输入的协议会有所不同，即UpdateTextBox方法中的text变量不同，如”30 726 00”，30代表称重设备的稳定状态，38代表不稳定，726代表称重重量，即72.6kg，所以text需要根据设备具体的输出区别对待。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-测试程序&quot;&gt;4. 测试程序&lt;/h2&gt;

&lt;p&gt;下面的程序是当时为了便于调测串口称重设备时做的，包含基本的称重数据读取及原始数据的输出，不支持发送指令。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/12-15-54.png&quot; alt=&quot;称重程序截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;链接: &lt;a href=&quot;http://pan.baidu.com/s/1o8oLe7w&quot;&gt;http://pan.baidu.com/s/1o8oLe7w&lt;/a&gt;  密码: &lt;strong&gt;tdei&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;SerialDemo.zip&lt;/strong&gt;源码保存在个人百度网盘的&lt;strong&gt;博客保存的源码&lt;/strong&gt;目录中（给自己看的）&lt;/p&gt;
&lt;/blockquote&gt;

</description>  
               <pubDate>Fri, 14 Jul 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/07/serial-port-weight/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/07/serial-port-weight/</guid>  
               </item>  
          
            <item>  
               <title>Gitlab私有仓库的备份和还原</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#gitlab私有仓库的备份和还原&quot; id=&quot;markdown-toc-gitlab私有仓库的备份和还原&quot;&gt;Gitlab私有仓库的备份和还原&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-gitlab的搭建&quot; id=&quot;markdown-toc-1-gitlab的搭建&quot;&gt;1. Gitlab的搭建&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-配置备份路径&quot; id=&quot;markdown-toc-2-配置备份路径&quot;&gt;2. 配置备份路径&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-备份gitlab&quot; id=&quot;markdown-toc-3-备份gitlab&quot;&gt;3. 备份Gitlab&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-还原gitlab&quot; id=&quot;markdown-toc-4-还原gitlab&quot;&gt;4. 还原Gitlab&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;gitlab私有仓库的备份和还原&quot;&gt;Gitlab私有仓库的备份和还原&lt;/h1&gt;

&lt;h2 id=&quot;1-gitlab的搭建&quot;&gt;1. Gitlab的搭建&lt;/h2&gt;

&lt;p&gt;单纯的搭建Gitlab需要安装和配置很多东西，过于麻烦，这里使用&lt;strong&gt;&lt;a href=&quot;https://bitnami.com&quot;&gt;bitnami&lt;/a&gt;&lt;/strong&gt;的一键安装方式进行安装，傻瓜式的安装按步骤执行即可。Bitnami的Gitlab下载地址为 &lt;strong&gt;&lt;a href=&quot;https://bitnami.com/stack/gitlab&quot;&gt;https://bitnami.com/stack/gitlab&lt;/a&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;默认的Gitlab安装路径为&lt;/strong&gt;：/opt/gitlab-x.xx.x-x&lt;/p&gt;

&lt;h2 id=&quot;2-配置备份路径&quot;&gt;2. 配置备份路径&lt;/h2&gt;

&lt;p&gt;编辑 &lt;strong&gt;/opt/gitlab-8.12.6-0/apps/gitlab/htdocs/config/gitlab.yml&lt;/strong&gt; 文件，找到如下&lt;strong&gt;Backup&lt;/strong&gt;节点。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## Backup settings
backup:
	# path: &quot;tmp/backups&quot; 默认的备份路径
	path: &quot;/home/git/backup&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;配置好后需要重新启动Gitlab使其生效&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./ctlscript.sh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-备份gitlab&quot;&gt;3. 备份Gitlab&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 切换到git用户&lt;/span&gt;
su - git
&lt;span class=&quot;c&quot;&gt;# 进入备份脚本目录&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/gitlab-8.12.6-0/apps/gitlab/htdocs
&lt;span class=&quot;c&quot;&gt;# 执行备份命令&lt;/span&gt;
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;bin/rake gitlab:backup:create &lt;span class=&quot;nv&quot;&gt;RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-还原gitlab&quot;&gt;4. 还原Gitlab&lt;/h2&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 切换到git用户&lt;/span&gt;
su - git
&lt;span class=&quot;c&quot;&gt;# 进入备份脚本目录&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/gitlab-8.12.6-0/apps/gitlab/htdocs
&lt;span class=&quot;c&quot;&gt;# 执行还原命令&lt;/span&gt;
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;bin/rake gitlab:backup:restore &lt;span class=&quot;nv&quot;&gt;RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production &lt;span class=&quot;nv&quot;&gt;BACKUP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1405247282
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;更多的备份还原参数请参看 &lt;a href=&quot;https://docs.gitlab.com/ce/raketasks/backup_restore.html&quot;&gt;https://docs.gitlab.com/ce/raketasks/backup_restore.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>  
               <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/04/gitlab-backup-restore/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/04/gitlab-backup-restore/</guid>  
               </item>  
          
            <item>  
               <title>Nohup后台启动不输出及文件过大的问题</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#nohup后台启动不输出及文件过大的问题&quot; id=&quot;markdown-toc-nohup后台启动不输出及文件过大的问题&quot;&gt;Nohup后台启动不输出及文件过大的问题&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-背景&quot; id=&quot;markdown-toc-1-背景&quot;&gt;1. 背景&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#1-重定向概念&quot; id=&quot;markdown-toc-1-重定向概念&quot;&gt;1. 重定向概念&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-无底洞devnull文件&quot; id=&quot;markdown-toc-2-无底洞devnull文件&quot;&gt;2. 无底洞/dev/null文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-nohup的正常用法&quot; id=&quot;markdown-toc-3-nohup的正常用法&quot;&gt;3. nohup的正常用法&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;nohup后台启动不输出及文件过大的问题&quot;&gt;Nohup后台启动不输出及文件过大的问题&lt;/h1&gt;

&lt;h2 id=&quot;1-背景&quot;&gt;1. 背景&lt;/h2&gt;

&lt;p&gt;在Linux中常常使用&lt;strong&gt;nohup&lt;/strong&gt;的方式启动程序，目的是当关闭终端时程序能自由的后台执行，&lt;strong&gt;nohup&lt;/strong&gt;启动会将程序输出信息进行保持到&lt;strong&gt;nohup.out&lt;/strong&gt;文件中，久而久之此文件会过于庞大，且程序有自己的日志系统，所以&lt;strong&gt;nohup&lt;/strong&gt;的纪录往往是多余且没有效率的。&lt;/p&gt;

&lt;h2 id=&quot;1-重定向概念&quot;&gt;1. 重定向概念&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;0 标准输入（默认）&lt;/li&gt;
  &lt;li&gt;1 标准输出&lt;/li&gt;
  &lt;li&gt;2 错误输出&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;将错误信息输出到error.log文件中&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup ./start.sh 2&amp;gt;error.log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;将错误信息重定向到标准输出上&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup ./start.sh 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2-无底洞devnull文件&quot;&gt;2. 无底洞/dev/null文件&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;/dev/null&lt;/strong&gt;可以比喻为Linux系统的垃圾桶，任何重定向到此的信息都会被丢掉。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;标准信息和错误信息都不纪录&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup ./start.sh 1&amp;gt;/dev./null 2&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;将错误重定向到标准输出再重定向到/dev/null&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup ./start.sh 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-nohup的正常用法&quot;&gt;3. nohup的正常用法&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;标准信息丢弃，错误信息纪录到error.log文件&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup ./start.sh &amp;gt;/dev/null 2&amp;gt;error.log &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;标准信息和错误信息都丢弃&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup ./start.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Tue, 18 Apr 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/04/nohup-big-output/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/04/nohup-big-output/</guid>  
               </item>  
          
            <item>  
               <title>使用css的sprites技术</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#使用css的sprites技术&quot; id=&quot;markdown-toc-使用css的sprites技术&quot;&gt;使用css的sprites技术&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#什么是css的sprites&quot; id=&quot;markdown-toc-什么是css的sprites&quot;&gt;什么是css的sprites&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sprites的主要css属性&quot; id=&quot;markdown-toc-sprites的主要css属性&quot;&gt;sprites的主要css属性&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sprites怎么使用&quot; id=&quot;markdown-toc-sprites怎么使用&quot;&gt;sprites怎么使用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#通过photoshop如何找到坐标点&quot; id=&quot;markdown-toc-通过photoshop如何找到坐标点&quot;&gt;通过photoshop如何找到坐标点&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;使用css的sprites技术&quot;&gt;使用css的sprites技术&lt;/h1&gt;

&lt;h2 id=&quot;什么是css的sprites&quot;&gt;什么是css的sprites&lt;/h2&gt;

&lt;p&gt;将众多资源图片文件统一整合到一张图片中，通过坐标位置使用资源图片，降低页面多资源图片的请求次数，提高页面加载速度。&lt;/p&gt;

&lt;h2 id=&quot;sprites的主要css属性&quot;&gt;sprites的主要css属性&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;属性名&lt;/th&gt;
      &lt;th&gt;属性含义&lt;/th&gt;
      &lt;th&gt;示例&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;background-image&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;为元素设置背景图像。默认地，背景图像位于元素的左上角，并在水平和垂直方向上重复。&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background-image:url(sprite0613v3.png)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;background-repeat&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;设置是否及如何重复背景图像。默认地，背景图像在水平和垂直方向上重复。&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background-repeat:no&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;background-position&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;设置背景图像的起始位置。&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background-position:-102px -109px&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sprites怎么使用&quot;&gt;sprites怎么使用&lt;/h2&gt;

&lt;p&gt;下图为一个示例的sprites图片，可以看出多个图标资源聚集在一张图片中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/nav-b_z.png&quot; alt=&quot;sprites图片&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面的代码是通过坐标定位到logo和红点的代码&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;CSS sprites&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;url(nav-b_z.png)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;background-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.logo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;background-position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.play&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;background-position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-112px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-150px&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;play&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最终展现如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/09-35-04.png&quot; alt=&quot;结果&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;通过photoshop如何找到坐标点&quot;&gt;通过photoshop如何找到坐标点&lt;/h2&gt;

&lt;p&gt;通过上面的代码可以知道，sprites的关键在于如何定位资源的x、y轴坐标以及它的长宽。将资源图片通过photoshop打开，点击菜单栏”&lt;strong&gt;窗口&lt;/strong&gt;“调出”&lt;strong&gt;信息窗口&lt;/strong&gt;“，通过”&lt;strong&gt;矩形选择工具&lt;/strong&gt;“选择需要定位的资源，在信息窗口中得出需要的sprites值。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/09-41-34.png&quot; alt=&quot;photoshop使用sprites&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;x、y坐标需要使用负数，0坐标除外。&lt;/p&gt;
&lt;/blockquote&gt;

</description>  
               <pubDate>Mon, 17 Apr 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/04/css-sprites/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/04/css-sprites/</guid>  
               </item>  
          
            <item>  
               <title>Shell获取屏幕分辨率</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#shell获取屏幕分辨率&quot; id=&quot;markdown-toc-shell获取屏幕分辨率&quot;&gt;Shell获取屏幕分辨率&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;shell获取屏幕分辨率&quot;&gt;Shell获取屏幕分辨率&lt;/h1&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 获取当前主机屏幕分辨率字符串&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;detectedresolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;xdpyinfo | grep -A 3 &lt;span class=&quot;s2&quot;&gt;&quot;screen #0&quot;&lt;/span&gt; | grep dimensions | tr -s &lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; | cut -d&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; -f 3&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##  A) 1024x600&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##  B) 1024x768&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##  C) 1280x768&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##  D) 1280x1024&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##  E) 1600x1200&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$detectedresolution&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;1024x600&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resA &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;1024x768&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resB &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;1280x768&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resC &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;1366x768&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resC &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;1280x1024&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resD &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;1600x1200&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resE &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;1366x768&quot;&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resF &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
		  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; resA &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Wed, 12 Apr 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/04/shell-screen-size/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/04/shell-screen-size/</guid>  
               </item>  
          
            <item>  
               <title>Shell判断当前用户是否为root用户</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#shell判断当前用户是否为root用户&quot; id=&quot;markdown-toc-shell判断当前用户是否为root用户&quot;&gt;Shell判断当前用户是否为root用户&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;shell判断当前用户是否为root用户&quot;&gt;Shell判断当前用户是否为root用户&lt;/h1&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# EUID为0表示具有root权限&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$EUID&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 0&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# check root&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$EUID&lt;/span&gt; -ne 0 &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;You don't have admin privilegies, execute the script as root.&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>  
               <pubDate>Tue, 11 Apr 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/04/shell-is-root/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/04/shell-is-root/</guid>  
               </item>  
          
    </channel>  
</rss>
