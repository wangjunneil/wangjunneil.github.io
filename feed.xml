<?xml version="1.0" encoding="UTF-8"?>  
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">  
    <channel>  
        <title></title>  
        <description>王俊博客，软件改变世界！王俊博客是作者个人知识库、是记录历程回顾的笔记本、是经验教训的资源池， 旨在促进软件开发领域知识与创新的传播，为软件开发中提供帮助。更多是作者本人的经验积累。
</description>  
        <link>http://localhost:4000</link>  
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />  
          
            <item>  
               <title>使用Tomcat时应该注意的安全策略</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#使用tomcat时应该注意的安全策略&quot; id=&quot;markdown-toc-使用tomcat时应该注意的安全策略&quot;&gt;使用Tomcat时应该注意的安全策略&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-删除默认应用&quot; id=&quot;markdown-toc-1-删除默认应用&quot;&gt;1. 删除默认应用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-默认用户管理&quot; id=&quot;markdown-toc-2-默认用户管理&quot;&gt;2. 默认用户管理&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-隐藏混淆版本信息&quot; id=&quot;markdown-toc-3-隐藏混淆版本信息&quot;&gt;3. 隐藏混淆版本信息&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-关闭自动部署&quot; id=&quot;markdown-toc-4-关闭自动部署&quot;&gt;4. 关闭自动部署&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-自定义错误页面&quot; id=&quot;markdown-toc-5-自定义错误页面&quot;&gt;5. 自定义错误页面&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-关闭ajp端口&quot; id=&quot;markdown-toc-6-关闭ajp端口&quot;&gt;6. 关闭AJP端口&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#7-服务权限控制&quot; id=&quot;markdown-toc-7-服务权限控制&quot;&gt;7. 服务权限控制&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#8-cookie安全控制&quot; id=&quot;markdown-toc-8-cookie安全控制&quot;&gt;8. cookie安全控制&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;使用tomcat时应该注意的安全策略&quot;&gt;使用Tomcat时应该注意的安全策略&lt;/h1&gt;

&lt;h2 id=&quot;1-删除默认应用&quot;&gt;1. 删除默认应用&lt;/h2&gt;

&lt;p&gt;新部署的Tomcat，在webapps目录中有几个工程，包含了示例、管理等功能，这些绝大部分都用不到且有风险，应该删除。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm -rf apache-tomcat/webapps/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2-默认用户管理&quot;&gt;2. 默认用户管理&lt;/h2&gt;

&lt;p&gt;若不想通过web的方式部署应用，建议注释或者删除&lt;strong&gt;tomcat-users.xml&lt;/strong&gt;下用户权限相关配置。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;tomcat-users&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--
  &amp;lt;role rolename=&quot;tomcat&quot;/&amp;gt;
  &amp;lt;role rolename=&quot;role1&quot;/&amp;gt;
  &amp;lt;user username=&quot;tomcat&quot; password=&quot;tomcat&quot; roles=&quot;tomcat&quot;/&amp;gt;
  &amp;lt;user username=&quot;both&quot; password=&quot;tomcat&quot; roles=&quot;tomcat,role1&quot;/&amp;gt;
  &amp;lt;user username=&quot;role1&quot; password=&quot;tomcat&quot; roles=&quot;role1&quot;/&amp;gt;
--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tomcat-users&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;高版本的Tomcat默认已经将此注释&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-隐藏混淆版本信息&quot;&gt;3. 隐藏混淆版本信息&lt;/h2&gt;

&lt;p&gt;使用Tomcat时，若不使用nginx等反向代理，则会在消息头或者异常的页面直接暴露web服务器的名称及其版本号，这样攻击者可以有针对性的进行攻击。&lt;/p&gt;

&lt;p&gt;修改&lt;strong&gt;$CATALINA_HOME/conf/server.xml&lt;/strong&gt;,在Connector节点添加server字段，如下：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Connector&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8080&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;protocol=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;connectionTimeout=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20000&quot;&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;redirectPort=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8443&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;server=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;KBS1.1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/10-08-40.png&quot; alt=&quot;消息头&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-关闭自动部署&quot;&gt;4. 关闭自动部署&lt;/h2&gt;

&lt;p&gt;自动部署即将war包放在已经启动中的Tomcat时，自动解压缩和进行热部署。若不需要此功能则建议关闭。修改&lt;strong&gt;$CATALINA_HOME/conf/server.xml&lt;/strong&gt;中的&lt;strong&gt;host&lt;/strong&gt;字段，修改&lt;strong&gt;unpackWARs=”false” autoDeploy=”false”&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Host&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;localhost&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;appBase=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;webapps&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;unpackWARs=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoDeploy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;xmlValidation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlNamespaceAware=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;5-自定义错误页面&quot;&gt;5. 自定义错误页面&lt;/h2&gt;

&lt;p&gt;部署在Tomcat中的应用，在未定义404或者500等错误页面时，会抛出异常页面，异常页面会暴露出应用的路径及服务区版本等信息。所以通常需要在web.xml中配置异常页面。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;error-page&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;error-code&amp;gt;&lt;/span&gt;404&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-code&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;location&amp;gt;&lt;/span&gt;404.html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-page&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;error-page&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;error-code&amp;gt;&lt;/span&gt;500&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-code&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;location&amp;gt;&lt;/span&gt;/500.html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-page&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;6-关闭ajp端口&quot;&gt;6. 关闭AJP端口&lt;/h2&gt;

&lt;p&gt;AJP是为 Tomcat 与 HTTP 服务器之间通信而定制的协议，能提供较高的通信速度和效率。如果tomcat前端放的是apache的时候，会使用到AJP这个连接器。前端如果是由nginx做的反向代理的话可以不使用此连接器，因此需要注销掉该连接器。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Define an AJP 1.3 Connector on port 8009 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- &amp;lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&amp;gt; --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;7-服务权限控制&quot;&gt;7. 服务权限控制&lt;/h2&gt;

&lt;p&gt;tomcat以非root权限启动，应用部署目录权限和tomcat服务启动用户分离，比如tomcat以tomcat用户启动，而部署应用的目录设置为nobody用户750。&lt;/p&gt;

&lt;h2 id=&quot;8-cookie安全控制&quot;&gt;8. cookie安全控制&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;HttpOnly属性&lt;/strong&gt;：如果在Cookie中设置了”HttpOnly”属性，那么通过程序(JS脚本、Applet等)将无法读取到Cookie信息，这样能有效的防止XSS攻击。&lt;/p&gt;

&lt;p&gt;编辑&lt;strong&gt;$CATALINA_HOME/conf/context.xml&lt;/strong&gt;文件，在&lt;strong&gt;Context&lt;/strong&gt;节点中增加属性&lt;strong&gt;useHttpOnly=”true”&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Context&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useHttpOnly=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Default set of monitored resources --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;WatchedResource&amp;gt;&lt;/span&gt;WEB-INF/web.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/WatchedResource&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Uncomment this to disable session persistence across Tomcat restarts --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--
    &amp;lt;Manager pathname=&quot;&quot; /&amp;gt;
    --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;secure属性&lt;/strong&gt;：当设置为true时，表示创建的 Cookie 会被以安全的形式向服务器传输，也就是只能在 HTTPS 连接中被浏览器传递到服务器端进行会话验证，如果是 HTTP 连接则不会传递该信息，所以不会被窃取到Cookie 的具体内容。&lt;/p&gt;

&lt;p&gt;配置cookie的secure属性，在web.xml中sesion-config节点配置cooker-config，此配置只允许cookie在加密方式下传输。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;session-config&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;session-timeout&amp;gt;&lt;/span&gt;30&lt;span class=&quot;nt&quot;&gt;&amp;lt;/session-timeout&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;cookie-config&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;secure&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/secure&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/cookie-config&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/session-config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;secure&lt;/strong&gt;属性是防止信息在传递的过程中被监听捕获后信息泄漏，&lt;strong&gt;HttpOnly&lt;/strong&gt;属性的目的是防止程序获取cookie后进行攻击。&lt;/p&gt;
&lt;/blockquote&gt;

</description>  
               <pubDate>Thu, 06 Apr 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/04/tomcat-security/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/04/tomcat-security/</guid>  
               </item>  
          
            <item>  
               <title>Nginx常用配置汇总</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#nginx常用配置汇总&quot; id=&quot;markdown-toc-nginx常用配置汇总&quot;&gt;Nginx常用配置汇总&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#反向代理简要配置&quot; id=&quot;markdown-toc-反向代理简要配置&quot;&gt;反向代理简要配置&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#http方式的代理转发配置&quot; id=&quot;markdown-toc-http方式的代理转发配置&quot;&gt;HTTP方式的代理转发配置&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#https方式的代理转发配置&quot; id=&quot;markdown-toc-https方式的代理转发配置&quot;&gt;HTTPS方式的代理转发配置&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#正向http代理使用&quot; id=&quot;markdown-toc-正向http代理使用&quot;&gt;正向HTTP代理使用&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#配置正向代理&quot; id=&quot;markdown-toc-配置正向代理&quot;&gt;配置正向代理&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#客户端使用正向代理&quot; id=&quot;markdown-toc-客户端使用正向代理&quot;&gt;客户端使用正向代理&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#https证书生成&quot; id=&quot;markdown-toc-https证书生成&quot;&gt;HTTPS证书生成&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#代理缓存配置&quot; id=&quot;markdown-toc-代理缓存配置&quot;&gt;代理缓存配置&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#创建缓存目录并授与权限&quot; id=&quot;markdown-toc-创建缓存目录并授与权限&quot;&gt;创建缓存目录并授与权限&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#利用缓存目录配置代理缓存&quot; id=&quot;markdown-toc-利用缓存目录配置代理缓存&quot;&gt;利用缓存目录配置代理缓存&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#跨域请求配置&quot; id=&quot;markdown-toc-跨域请求配置&quot;&gt;跨域请求配置&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#跨域消息头说明&quot; id=&quot;markdown-toc-跨域消息头说明&quot;&gt;跨域消息头说明&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#具体配置明细&quot; id=&quot;markdown-toc-具体配置明细&quot;&gt;具体配置明细&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#负载均衡配置&quot; id=&quot;markdown-toc-负载均衡配置&quot;&gt;负载均衡配置&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#简单的权重示例&quot; id=&quot;markdown-toc-简单的权重示例&quot;&gt;简单的权重示例&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#负载参数说明&quot; id=&quot;markdown-toc-负载参数说明&quot;&gt;负载参数说明&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;nginx常用配置汇总&quot;&gt;Nginx常用配置汇总&lt;/h1&gt;

&lt;h2 id=&quot;反向代理简要配置&quot;&gt;反向代理简要配置&lt;/h2&gt;

&lt;h3 id=&quot;http方式的代理转发配置&quot;&gt;HTTP方式的代理转发配置&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen       80;
    server_name  www.example.cn;

    location / {
        proxy_set_header Host $host:80;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://192.168.1.199:8080;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;https方式的代理转发配置&quot;&gt;HTTPS方式的代理转发配置&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen       443;
    server_name  www.example.com;

    ssl on;
    ssl_certificate server.crt;
    ssl_certificate_key server.key;
    ssl_session_timeout 5m;

    location / {
        proxy_set_header Host $host:443;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://192.168.1.197:8443;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;正向http代理使用&quot;&gt;正向HTTP代理使用&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;背景&lt;/strong&gt;：子网中存在两台服务器AB，服务器A可以连接到互联网，服务器B不能上网，服务器B需要使用服务器A中的nginx正向代理功能使其连接到互联网上。&lt;/p&gt;

&lt;h3 id=&quot;配置正向代理&quot;&gt;配置正向代理&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    resolver 8.8.8.8;
    resolver_timeout 5s;

    listen 0.0.0.0:8080;

    location / {
        proxy_pass $scheme://$host$request_uri;
        proxy_set_header Host $http_host;

        proxy_buffers 256 4k;
        proxy_max_temp_file_size 0;

        proxy_connect_timeout 30;

        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 301 1h;
        proxy_cache_valid any 1m;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;客户端使用正向代理&quot;&gt;客户端使用正向代理&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;全局HTTP代理&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 添加全局HTTP代理&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://10.132.10.116:8080&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 删除全局HTTP代理&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;http_proxy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;yum使用代理&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 编辑yum.conf文件&lt;/span&gt;
vim /etc/yum.conf

&lt;span class=&quot;c&quot;&gt;# 底部添加&lt;/span&gt;
proxy &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; http://10.132.10.116:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;据网络上文章所说，nginx的正向代理不支持HTTPS的方式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;https证书生成&quot;&gt;HTTPS证书生成&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl genrsa -des3 -out server.key 1024
openssl req -new -key server.key -out server.csr
cp server.key server.key.org
openssl rsa -in server.key.org -out server.key
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;代理缓存配置&quot;&gt;代理缓存配置&lt;/h2&gt;

&lt;h3 id=&quot;创建缓存目录并授与权限&quot;&gt;创建缓存目录并授与权限&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p /usr/local/nginx/temp
chmod -R 755 /usr/local/nginx/temp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;缓存目录的创建位置可以随意，但必须具有读写权限&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;利用缓存目录配置代理缓存&quot;&gt;利用缓存目录配置代理缓存&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http {
    # levels=1:2 配置缓存空间有两层hash目录
    # keys_zone=cache_zone:50m 配置缓存的名称及缓存空间大小
    # inactive 设置缓存有效期，1d表示在1天时间内没有被访问则自动删除
    # max_size 硬盘缓存的最大大小
    proxy_cache_path /usr/local/nginx/cache levels=1:2 keys_zone=cache_one:50m inactive=1d max_size=10g;
    server {
        listen       80;
        server_name  www.testcache123.com;

        location / {
            proxy_cache cache_one; # 指定上面配置的缓存名称
            proxy_cache_valid 200 302 1h; # 200和302请求缓存1小时
            proxy_cache_valid 301 1d; # 301请求缓存1天
            proxy_cache_key $host$uri$is_args$args; # 缓存请求匹配的key
            expires 30d;

            proxy_set_header Host $host:80;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://www.wangjunneil.com;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;跨域请求配置&quot;&gt;跨域请求配置&lt;/h2&gt;

&lt;h3 id=&quot;跨域消息头说明&quot;&gt;跨域消息头说明&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Access-Control-Allow-Origin&lt;/td&gt;
      &lt;td&gt;授权那些地址或者域名可以访问&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Access-Control-Allow-Credentials&lt;/td&gt;
      &lt;td&gt;是否响应与该请求可以暴露&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Access-Control-Allow-Methods&lt;/td&gt;
      &lt;td&gt;指定运行请求的HTTP方法&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;具体配置明细&quot;&gt;具体配置明细&lt;/h3&gt;

&lt;p&gt;在nginx中，若设置在http段内则对所有server都启用，设置在server段内则只对该server启用，设置在location段内则对该请求启用。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen       80;
    server_name  vinny.cc;

    location / {
        # 跨域请求头
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers true;
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS;

        proxy_set_header Host $host:80;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://localhost:8080;
        client_max_body_size    1000m;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;负载均衡配置&quot;&gt;负载均衡配置&lt;/h2&gt;

&lt;h3 id=&quot;简单的权重示例&quot;&gt;简单的权重示例&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upstream backend {
    server  192.168.1.197:80 backup;
    server  192.168.1.196:80 weight=1;
    server  192.168.1.197:80 weight=3;
    # ip_hash;
}

server {
    location / {
        proxy_pass http://backend;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nginx自带的负载均衡策略有轮询（默认），权重和ip_hash，第三方的有fair和url_hash等配置方式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;负载参数说明&quot;&gt;负载参数说明&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;down&lt;/td&gt;
      &lt;td&gt;表示当前server不参与负载&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;weight&lt;/td&gt;
      &lt;td&gt;默认为1，weight越大，负载的权重就越大，分发到的请求就越多&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;max_fails&lt;/td&gt;
      &lt;td&gt;允许请求失败的次数，默认为1，当超过最大次数时，返回proxy_next_upstream 模块定义的错误&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fail_timeout&lt;/td&gt;
      &lt;td&gt;max_fails多少次失败后，暂停请求的时间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;backup&lt;/td&gt;
      &lt;td&gt;其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>  
               <pubDate>Sat, 11 Mar 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/03/nginx-general-config/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/03/nginx-general-config/</guid>  
               </item>  
          
            <item>  
               <title>Centos7文本界面与图形界面的切换</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#centos7文本界面与图形界面的切换&quot; id=&quot;markdown-toc-centos7文本界面与图形界面的切换&quot;&gt;Centos7文本界面与图形界面的切换&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#文本模式&quot; id=&quot;markdown-toc-文本模式&quot;&gt;文本模式&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#图形模式&quot; id=&quot;markdown-toc-图形模式&quot;&gt;图形模式&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;centos7文本界面与图形界面的切换&quot;&gt;Centos7文本界面与图形界面的切换&lt;/h1&gt;

&lt;h2 id=&quot;文本模式&quot;&gt;文本模式&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-default multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;图形模式&quot;&gt;图形模式&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-default graphical.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;reboot&lt;/code&gt;重启即可&lt;/p&gt;
&lt;/blockquote&gt;

</description>  
               <pubDate>Fri, 10 Mar 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/03/centos7-text-graphics/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/03/centos7-text-graphics/</guid>  
               </item>  
          
            <item>  
               <title>Linux中使用yum安装zabbix-agent客户端和配置</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#linux中使用yum安装zabbix-agent客户端和配置&quot; id=&quot;markdown-toc-linux中使用yum安装zabbix-agent客户端和配置&quot;&gt;Linux中使用yum安装zabbix-agent客户端和配置&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-下载zabbix仓库并安装&quot; id=&quot;markdown-toc-1-下载zabbix仓库并安装&quot;&gt;1. 下载zabbix仓库并安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-yum安装zabbix-agent客户端&quot; id=&quot;markdown-toc-2-yum安装zabbix-agent客户端&quot;&gt;2. yum安装zabbix-agent客户端&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-编辑zabbix-agent配置文件&quot; id=&quot;markdown-toc-3-编辑zabbix-agent配置文件&quot;&gt;3. 编辑zabbix-agent配置文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-检查服务端口的有效性&quot; id=&quot;markdown-toc-4-检查服务端口的有效性&quot;&gt;4. 检查服务端口的有效性&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-启动zabbix-agent客户端服务&quot; id=&quot;markdown-toc-5-启动zabbix-agent客户端服务&quot;&gt;5. 启动zabbix-agent客户端服务&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-检查服务是否正常启动&quot; id=&quot;markdown-toc-6-检查服务是否正常启动&quot;&gt;6. 检查服务是否正常启动&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;linux中使用yum安装zabbix-agent客户端和配置&quot;&gt;Linux中使用yum安装zabbix-agent客户端和配置&lt;/h1&gt;

&lt;h2 id=&quot;1-下载zabbix仓库并安装&quot;&gt;1. 下载zabbix仓库并安装&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://repo.zabbix.com/zabbix/2.4/rhel/6/x86_64/zabbix-release-2.4-1.el6.noarch.rpm

rpm -ivh zabbix-release-2.4-1.el6.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2-yum安装zabbix-agent客户端&quot;&gt;2. yum安装zabbix-agent客户端&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum install zabbix-agent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-编辑zabbix-agent配置文件&quot;&gt;3. 编辑zabbix-agent配置文件&lt;/h2&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/zabbix/zabbixd.conf&lt;/code&gt;编辑打开文件，修改的内容如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hostname		= 客户端主机名称
SourceIP		= 客户端主机IP
Server			= Zabbix Server的IP地址
ServerActive		= Zabbix Server的IP地址
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-检查服务端口的有效性&quot;&gt;4. 检查服务端口的有效性&lt;/h2&gt;

&lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/services&lt;/code&gt;文件，检查是否存在并添加zabbix客户端端口，如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zabbix-agent    10050/tcp  Zabbix Agent
zabbix-agent    10050/udp  Zabbix Agent
zabbix-trapper  10051/tcp  Zabbix Trapper
zabbix-trapper  10051/udp  Zabbix Trapper
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;若服务器有配置防火墙规则，则添加zabbix-agent端口的出入站规则：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A INPUT -m state --state NEW -m udp -p udp --dport 10050 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 10050 -j ACCEPT
iptables -A INPUT -m state --state NEW -m udp -p udp --dport 10051 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 10051 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;5-启动zabbix-agent客户端服务&quot;&gt;5. 启动zabbix-agent客户端服务&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zabbix_agentd start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;6-检查服务是否正常启动&quot;&gt;6. 检查服务是否正常启动&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 检查是否存在zabbix-agent进程&lt;/span&gt;
ps -ef | grep zabbix

&lt;span class=&quot;c&quot;&gt;# 检查10050端口是否处于监听状态&lt;/span&gt;
netstat -an | grep 10050
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Wed, 15 Feb 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/02/zabbix-agent-install/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/02/zabbix-agent-install/</guid>  
               </item>  
          
            <item>  
               <title>Linux增加swap分区</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#linux增加swap分区&quot; id=&quot;markdown-toc-linux增加swap分区&quot;&gt;Linux增加swap分区&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-何为swap分区&quot; id=&quot;markdown-toc-1-何为swap分区&quot;&gt;1. 何为swap分区&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-创建分区&quot; id=&quot;markdown-toc-2-创建分区&quot;&gt;2. 创建分区&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-转换为swap分区&quot; id=&quot;markdown-toc-3-转换为swap分区&quot;&gt;3. 转换为swap分区&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-使swap分区有效&quot; id=&quot;markdown-toc-4-使swap分区有效&quot;&gt;4. 使swap分区有效&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-检查swap分区&quot; id=&quot;markdown-toc-5-检查swap分区&quot;&gt;5. 检查swap分区&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-配置启动自动挂载&quot; id=&quot;markdown-toc-6-配置启动自动挂载&quot;&gt;6. 配置启动自动挂载&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#附录fstab挂载文件配置说明&quot; id=&quot;markdown-toc-附录fstab挂载文件配置说明&quot;&gt;附录：fstab挂载文件配置说明&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;linux增加swap分区&quot;&gt;Linux增加swap分区&lt;/h1&gt;

&lt;h2 id=&quot;1-何为swap分区&quot;&gt;1. 何为swap分区&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;swap&lt;/strong&gt;分区在系统的物理内存不够用的时候，把硬盘空间中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到swap分区中，等到那些程序要运行时，再从swap分区中恢复保存的数据到内存中。&lt;/p&gt;

&lt;h2 id=&quot;2-创建分区&quot;&gt;2. 创建分区&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 创建一个512M的/home/swap分区，文件大小为51200个block,1个block为1k&lt;/span&gt;
dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/home/swap &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1024 &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;上述命令需要以&lt;strong&gt;root&lt;/strong&gt;账号执行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-转换为swap分区&quot;&gt;3. 转换为swap分区&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkswap /home/swap
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-使swap分区有效&quot;&gt;4. 使swap分区有效&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;swapon /home/swap
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;5-检查swap分区&quot;&gt;5. 检查swap分区&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;free -m
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;6-配置启动自动挂载&quot;&gt;6. 配置启动自动挂载&lt;/h2&gt;

&lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/fstab&lt;/code&gt;文件，添加swap分区配置，如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/swap	swap	swap	defaults	0 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;附录fstab挂载文件配置说明&quot;&gt;附录：fstab挂载文件配置说明&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/14-38-19.png&quot; alt=&quot;fstab内容&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;列&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;磁盘设备文件或该设备的Label或者UUID&lt;/td&gt;
      &lt;td&gt;该列可以是设备名、设备的Label或者设备的UUID。可以使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;blkid&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;blkid /home/swap&lt;/code&gt;查看设备名和UUID。&lt;br /&gt;&lt;strong&gt;设备名、Label和UUID区别？&lt;/strong&gt;&lt;br /&gt;设备名，如/dev/sda是固定的，硬盘的插槽改变，设备名会变更。使用Label挂在则不需要担心此类问题，但需要注意Label的格式化时的名称变化。对于UUID，唯一性，磁盘在格式化后会分配唯一的标识号，&lt;strong&gt;挂在建议使用UUID的方式&lt;/strong&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;设备挂在点&lt;/td&gt;
      &lt;td&gt;表示将该设备挂在在系统的哪个文件目录下&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;文件系统格式&lt;/td&gt;
      &lt;td&gt;磁盘文件系统的格式，通常是包括ext2、ext3、reiserfs、nfs、vfat等。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;文件系统参数&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Async/sync&lt;/strong&gt; 设置是否为同步方式运行，默认为async&lt;br /&gt;&lt;strong&gt;auto/noauto&lt;/strong&gt; 当下载mount -a 的命令时，此文件系统是否被主动挂载，默认为auto&lt;br /&gt;&lt;strong&gt;rw/ro&lt;/strong&gt; 是否以以只读或者读写模式挂载&lt;br /&gt;&lt;strong&gt;exec/noexec&lt;/strong&gt; 限制此文件系统内是否能够进行”执行”的操作&lt;br /&gt;&lt;strong&gt;user/nouser&lt;/strong&gt; 是否允许用户使用mount命令挂载&lt;br /&gt;&lt;strong&gt;suid/nosuid&lt;/strong&gt; 是否允许SUID的存在&lt;br /&gt;&lt;strong&gt;Usrquota&lt;/strong&gt; 启动文件系统支持磁盘配额模式&lt;br /&gt;&lt;strong&gt;Grpquota&lt;/strong&gt; 启动文件系统对群组磁盘配额模式的支持&lt;br /&gt;&lt;strong&gt;Defaults&lt;/strong&gt; 同时具有rw,suid,dev,exec,auto,nouser,async等默认参数的设置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;是否被dump备份命令作用&lt;/td&gt;
      &lt;td&gt;dump是一个用来作为备份的命令，通常这个参数的值为0或者1。&lt;br /&gt;&lt;strong&gt;0&lt;/strong&gt; 不要做dump备份&lt;br /&gt;&lt;strong&gt;1&lt;/strong&gt; 每天进行dump的操作&lt;br /&gt;&lt;strong&gt;2&lt;/strong&gt; 不定日期的进行dump操作&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;是否检验扇区&lt;/td&gt;
      &lt;td&gt;类似于windows开机时检查磁盘坏点，开启后系统会以fsck检查磁盘文件的完整性。&lt;br /&gt;&lt;strong&gt;0&lt;/strong&gt; 不要检查&lt;br /&gt;&lt;strong&gt;1&lt;/strong&gt; 最早检验&lt;br /&gt;&lt;strong&gt;2&lt;/strong&gt; 1级别检验完成之后进行检验&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>  
               <pubDate>Fri, 10 Feb 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/02/linux-add-swap-space/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/02/linux-add-swap-space/</guid>  
               </item>  
          
            <item>  
               <title>Centos7中NFS的配置及使用方法</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#centos7中nfs的配置及使用方法&quot; id=&quot;markdown-toc-centos7中nfs的配置及使用方法&quot;&gt;Centos7中NFS的配置及使用方法&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#安装nfs工具包&quot; id=&quot;markdown-toc-安装nfs工具包&quot;&gt;安装NFS工具包&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#编辑nfs配置文件&quot; id=&quot;markdown-toc-编辑nfs配置文件&quot;&gt;编辑NFS配置文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#服务端启动nfs&quot; id=&quot;markdown-toc-服务端启动nfs&quot;&gt;服务端启动NFS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#客户端执行挂载&quot; id=&quot;markdown-toc-客户端执行挂载&quot;&gt;客户端执行挂载&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#挂载命令exportfs说明&quot; id=&quot;markdown-toc-挂载命令exportfs说明&quot;&gt;挂载命令exportfs说明&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;centos7中nfs的配置及使用方法&quot;&gt;Centos7中NFS的配置及使用方法&lt;/h1&gt;

&lt;h2 id=&quot;安装nfs工具包&quot;&gt;安装NFS工具包&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum install -y nfs-utils
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;尽量使用&lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt;方式安装，依赖文件的互相依赖，编译安装很麻烦。
&lt;strong&gt;nfs-utils&lt;/strong&gt;包含server和client端的工具，所以nfs的服务端和客户端都需要执行此安装。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;编辑nfs配置文件&quot;&gt;编辑NFS配置文件&lt;/h2&gt;

&lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/exports&lt;/code&gt;文件，添加共享路径及访问规则，例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/data *(rw,sync,no_root_squash)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面为最简单的共享方式，共享本机&lt;strong&gt;/data&lt;/strong&gt;目录，允许所有来源进行挂载读写。&lt;/p&gt;

&lt;p&gt;配置文件中的每一行分为三个部分：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;共享路径，如:/root/nfs&lt;/li&gt;
  &lt;li&gt;访问来源，”*****“号表示任意，可以是一个IP地址，也可以是一个网段，如192.168.1.0/24&lt;/li&gt;
  &lt;li&gt;行为控制，括号中使用英文逗号分隔，如rw表示读写，ro只读，等参数&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：配置行中的&lt;strong&gt;访问来源&lt;/strong&gt;和&lt;strong&gt;行为控制&lt;/strong&gt;中间没有空格。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;服务端启动nfs&quot;&gt;服务端启动NFS&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 设置开机启动&lt;/span&gt;
systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;rpcbind.service
systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nfs-server.service

&lt;span class=&quot;c&quot;&gt;# 启动NFS服务&lt;/span&gt;
systemctl start rpcbind.service
systemctl start nfs-server.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动好后可以使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;rpcinfo -p&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;showmount -e&lt;/code&gt;查看是否启动和挂载成功。&lt;/p&gt;

&lt;h2 id=&quot;客户端执行挂载&quot;&gt;客户端执行挂载&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 设置开机运行&lt;/span&gt;
systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;rpcbind.service

&lt;span class=&quot;c&quot;&gt;# 启动RPC服务&lt;/span&gt;
systemctl start rpcbind.service

&lt;span class=&quot;c&quot;&gt;# 检查NFS服务器共享路径&lt;/span&gt;
showmount -e 192.168.1.100

&lt;span class=&quot;c&quot;&gt;# 执行挂载到本地&lt;/span&gt;
mount -t nfs 192.168.1.100:/data /root/resources
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;客户端执行挂载时尽量不要在目标目录中，完成后，可以使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;df -hP&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;mount&lt;/code&gt;查看挂载路径。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;挂载命令exportfs说明&quot;&gt;挂载命令exportfs说明&lt;/h2&gt;

&lt;p&gt;当更改了NFS的配置文件，可以不重启服务，使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;exportfs -rv&lt;/code&gt;重新读取，具体使用参数如下：&lt;/p&gt;

&lt;p&gt;-a ： 全部挂载或者卸载
-r ： 重新挂载
-u ： 卸载某个目录
-v ： 现实共享目录&lt;/p&gt;
</description>  
               <pubDate>Thu, 09 Feb 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/02/how-to-use-nfs-in-centos7/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/02/how-to-use-nfs-in-centos7/</guid>  
               </item>  
          
            <item>  
               <title>Shell中switch条件选择语句的执行示例</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#shell中switch条件选择语句的执行示例&quot; id=&quot;markdown-toc-shell中switch条件选择语句的执行示例&quot;&gt;Shell中switch条件选择语句的执行示例&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#脚本&quot; id=&quot;markdown-toc-脚本&quot;&gt;脚本&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;shell中switch条件选择语句的执行示例&quot;&gt;Shell中switch条件选择语句的执行示例&lt;/h1&gt;

&lt;h2 id=&quot;脚本&quot;&gt;脚本&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 定义一个选择语言的方法&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;language &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	clear
	&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
		&lt;/span&gt;clear
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;[i] Select your language&quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;                                       &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [1] English          &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [2] German      &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [3] Romanian     &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [4] Turkish    &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [5] Spanish    &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [6] Chinese   &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [7] Italian   &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [8] Czech   &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;      [9] Greek   &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;                                       &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n -e &lt;span class=&quot;s2&quot;&gt;&quot;[deltaxflux@fluxion]-[~] &quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;yn
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$yn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in
			&lt;/span&gt;1 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; english; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			2 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; german; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			3 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; romanian; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			4 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; turkish; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			5 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; spanish; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			6 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; chinese; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			7 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; italian; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			8 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; czech; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			9 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; greek; invokeMethod; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
			skip &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; english; skipme; &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; 
			&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Unknown option. Please choose again&quot;&lt;/span&gt;; clear &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
		  &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

language
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>  
               <pubDate>Tue, 10 Jan 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/01/shell-switch-cond/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/01/shell-switch-cond/</guid>  
               </item>  
          
            <item>  
               <title>Shell执行中信号捕获的处理方式</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#shell执行中信号捕获的处理方式&quot; id=&quot;markdown-toc-shell执行中信号捕获的处理方式&quot;&gt;Shell执行中信号捕获的处理方式&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#介绍&quot; id=&quot;markdown-toc-介绍&quot;&gt;介绍&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#脚本&quot; id=&quot;markdown-toc-脚本&quot;&gt;脚本&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#信号&quot; id=&quot;markdown-toc-信号&quot;&gt;信号&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;shell执行中信号捕获的处理方式&quot;&gt;Shell执行中信号捕获的处理方式&lt;/h1&gt;

&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;

&lt;p&gt;当shell在执行过程中，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL+C&lt;/code&gt;可以中断当前shell的执行，强制中断执行时可能需要做些清理任务，此时可以捕获中断信号进行shell进程结束前的处理。&lt;/p&gt;

&lt;h2 id=&quot;脚本&quot;&gt;脚本&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 定义中断执行方法&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;exitmode&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;clear temp file&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 注册信号处理&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;trap &lt;/span&gt;exitmode SIGINT SIGHUP

&lt;span class=&quot;c&quot;&gt;# 模拟一个10秒的任务&lt;/span&gt;
sleep 10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;信号&quot;&gt;信号&lt;/h2&gt;

&lt;p&gt;在unix系统中使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;kill -l&lt;/code&gt;查看所有支持的信号&lt;/p&gt;
</description>  
               <pubDate>Mon, 09 Jan 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/01/shell-trap-process/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/01/shell-trap-process/</guid>  
               </item>  
          
            <item>  
               <title>Shell执行时弹出xterm子进程终端窗口</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#shell执行时弹出xterm子进程终端窗口&quot; id=&quot;markdown-toc-shell执行时弹出xterm子进程终端窗口&quot;&gt;Shell执行时弹出xterm子进程终端窗口&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#介绍&quot; id=&quot;markdown-toc-介绍&quot;&gt;介绍&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#示例脚本&quot; id=&quot;markdown-toc-示例脚本&quot;&gt;示例脚本&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#参数解释&quot; id=&quot;markdown-toc-参数解释&quot;&gt;参数解释&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;shell执行时弹出xterm子进程终端窗口&quot;&gt;Shell执行时弹出xterm子进程终端窗口&lt;/h1&gt;

&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;

&lt;p&gt;不知道是否在看美国大片时，黑客执行某些工具，整个屏幕会时不时弹出多个终端窗口在执行，看似很酷的样子，其实实现很简单，每弹出的窗口都是作为一个子进程在运行，下面介绍实现方案。&lt;/p&gt;

&lt;h2 id=&quot;示例脚本&quot;&gt;示例脚本&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 弹出位置定义&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TOPLEFT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-geometry 90x13+0+0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TOPRIGHT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-geometry 83x26-0+0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BOTTOMLEFT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-geometry 90x24+0-0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BOTTOMRIGHT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-geometry 75x12-0-0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TOPLEFTBIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-geometry 91x42+0+0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TOPRIGHTBIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-geometry 83x26-0+0&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 左上角弹出执行ping的命令&lt;/span&gt;
xterm -hold -title &lt;span class=&quot;s2&quot;&gt;&quot;test title&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TOPLEFT&lt;/span&gt; -bg &lt;span class=&quot;s2&quot;&gt;&quot;#000000&quot;&lt;/span&gt; -fg &lt;span class=&quot;s2&quot;&gt;&quot;#FFFFFF&quot;&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;ping www.baidu.com&quot;&lt;/span&gt; &amp;amp;

&lt;span class=&quot;c&quot;&gt;# 右上角弹出执行下载的命令&lt;/span&gt;
xterm -hold -title &lt;span class=&quot;s2&quot;&gt;&quot;test title&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TOPRIGHT&lt;/span&gt; -bg &lt;span class=&quot;s2&quot;&gt;&quot;#000000&quot;&lt;/span&gt; -fg &lt;span class=&quot;s2&quot;&gt;&quot;#FFFFFF&quot;&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;wget http://nginx.org/download/nginx-1.10.2.tar.gz&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;xterm是阻塞式运行，即地一个xterm不执行完不会执行第二个，可以加上&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;号让其后台执行，但如果两个xterm都加上&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;号则主shell进行会立即关闭。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;参数解释&quot;&gt;参数解释&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-hold&lt;/td&gt;
      &lt;td&gt;开启资源等待模式。shell执行完成不会销毁窗口&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-title&lt;/td&gt;
      &lt;td&gt;定义终端标题&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-geometry&lt;/td&gt;
      &lt;td&gt;大小和坐标定义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-bg&lt;/td&gt;
      &lt;td&gt;背景色定义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-fg&lt;/td&gt;
      &lt;td&gt;前景色定义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-e&lt;/td&gt;
      &lt;td&gt;需要执行的任务&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>  
               <pubDate>Mon, 09 Jan 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/01/shell-pop-xterm/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/01/shell-pop-xterm/</guid>  
               </item>  
          
            <item>  
               <title>Shell执行任务时的loading效果</title>  
               <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#shell执行任务时的loading效果&quot; id=&quot;markdown-toc-shell执行任务时的loading效果&quot;&gt;Shell执行任务时的loading效果&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#脚本&quot; id=&quot;markdown-toc-脚本&quot;&gt;脚本&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#截图&quot; id=&quot;markdown-toc-截图&quot;&gt;截图&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;shell执行任务时的loading效果&quot;&gt;Shell执行任务时的loading效果&lt;/h1&gt;

&lt;h2 id=&quot;脚本&quot;&gt;脚本&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# loading状态方法&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;spinner &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.15
	&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;spinstr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'|/-\'&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ps a | awk &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt; | grep &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
			&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;spinstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;#?&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; [%c]  &quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spinstr&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;spinstr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$temp&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;spinstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$temp&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
			sleep &lt;span class=&quot;nv&quot;&gt;$delay&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\b\b\b\b\b\b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;done
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;    &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\b\b\b\b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 模拟耗时的任务&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;execute&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    sleep 5
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;Loading...&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 后台执行耗时的任务&lt;/span&gt;
execute &amp;amp;
&lt;span class=&quot;c&quot;&gt;# 启动loading效果&lt;/span&gt;
spinner &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$!&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;截图&quot;&gt;截图&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://ohdpyqlwy.bkt.clouddn.com/shell-loading-status.png&quot; alt=&quot;shell-loading&quot; /&gt;&lt;/p&gt;
</description>  
               <pubDate>Mon, 09 Jan 2017 00:00:00 +0800</pubDate>  
               <link>http://localhost:4000/2017/01/shell-loading-status/</link>  
               <guid isPermaLink="true">http://localhost:4000/2017/01/shell-loading-status/</guid>  
               </item>  
          
    </channel>  
</rss>
